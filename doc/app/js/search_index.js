var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","bracket","bracketcontest","bracketcontestant","bracketcontestscontroller","bracketcontestshelper","bracketgrouping","bracketgroupingscontroller","bracketpairing","bracketshelper","competition","competitionscontroller","competitionshelper","contest","contestant","customer","customeremailer","customersessionscontroller","customersessionshelper","customerscontroller","customershelper","displaycontroller","displayhelper","gamedate","gametime","grouping","groupingplace","groupingscontroller","groupingshelper","manager","managersessionscontroller","managersessionshelper","managerscontroller","navitem","nestedcontroller","nestedmodel","object","priorbracketcontest","rails","myrspecgenerator","regularcontest","regularcontestant","regularcontestscontroller","regularcontestshelper","scorer","scorersessionscontroller","scorersessionshelper","scorerscontroller","scorershelper","supportemailer","team","teamscontroller","teamshelper","validdate","validdatescontroller","validdateshelper","venue","venuescontroller","venueshelper","welcomecontroller","welcomehelper","<()","<=>()","<=>()","<=>()","==()",">()","gamedate()","gametime()","advance_contestants()","all_for()","all_participant_codes()","all_priors()","all_subgroupings()","all_teams()","alll()","as_bracket()","as_competition()","as_contestants()","as_regular_contestants()","assign_seeding_and_ccode()","authenticate()","authenticate()","authenticate()","authenticate_manager()","away_team_id()","awaycontestant_fullname()","bc_bot()","bc_btopcontents()","bc_btopcontentz()","bc_mid()","bc_midcontents()","bc_to_adiv()","bc_to_div()","bc_to_hdiv()","bc_to_pairdiv()","bc_top()","bottom()","briefname()","cancel()","change_manager_password()","change_password()","change_scorer_password()","choose_competition()","choose_customer()","clear_manager_password()","clear_manager_password()","clear_scorer_password()","clear_scorer_password()","compare_teams()","complete()","complete_se_matchups()","confirm()","confirmed?()","conpetition_id()","contestant_class()","contestantlabel()","contestanttype()","contests()","contests()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_competition()","create_new_salt()","create_root_grouping()","default_bracketgrouping()","default_comp()","default_comp()","default_comp()","default_comp()","default_comp()","default_comp()","default_cust()","destroy()","destroy()","destroy()","destroy()","destroy()","display_date()","display_date()","display_link_array()","display_pct()","display_time()","display_time()","draw()","draws()","dump()","dump()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","encrypted_password()","failure_redirect()","for_pair()","fullname()","fullname()","fullname()","fullname()","fullnav()","game_number()","gametimeindex()","goal_diff()","goals_against()","goals_for()","greet()","greet()","group_schedule_headers()","group_schedule_row()","grouping()","has_score?()","has_subgroupings?()","has_teams?()","hierarchy()","home_team_id()","homecontestant_fullname()","index()","index()","index()","index()","index()","index()","index()","index()","index()","inspect()","inspect()","instructions()","load()","loggedout()","logout()","logout()","logout()","logout()","loser_code()","loss()","losses()","lower_mid()","manager_id()","manager_link_array()","manager_password()","manager_password=()","middle_mid()","navpanel()","nav_panel()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_hash()","nav_link_to_grouping()","navitem()","needs_no_authentication()","needs_no_authentication()","needs_score?()","nested_groupings()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_competition()","numrounds()","opponent()","password()","password=()","passwords()","pct()","playoffbracketlabels()","points()","poolgroupseasonlabels()","priorcontest()","rant()","record_result()","record_result()","report()","result_headings()","result_row()","result_rowww()","roundrobin()","rrobin()","save()","save()","save_all!()","scorer_id()","scorer_link_array()","scorer_password()","scorer_password=()","se_matchups()","send_us_a_message()","set_bracketgrouping()","set_competition()","show()","show()","show()","show()","show()","show()","spacer_div()","standings_headers()","standings_row()","statuses()","subgroupings()","tbd?()","team()","teamname()","times()","times()","to_s()","top()","top_grouping()","unconfirmed()","update()","update()","update()","update()","update()","update()","update()","update_password()","upper_mid()","venue_name()","welcome()","welcomee()","win()","winner_code()","wins()","application.js","bracketcontests.js.coffee","competitions.js.coffee","customer_sessions.js.coffee","customers.js.coffee","display.js.coffee","groupings.js.coffee","manager_sessions.js.coffee","regularcontests.js.coffee","result_sessions.js.coffee","results.js","results.js.coffee","teams.js.coffee","validdates.js.coffee","venues.js.coffee","welcome.js.coffee","application.css","bracketcontests.css.scss","common.css","competitions.css.scss","customer_sessions.css.scss","customers.css.scss","display.css.scss","groupings.css.scss","manager_sessions.css.scss","regularcontests.css.scss","scaffolds.css.scss","scorer_sessions.css.scss","scorers.css.scss","teams.css.scss","validdates.css.scss","venues.css.scss","welcome.css.scss","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","ydivvy.html","zdivvy.html","index.json.jbuilder","show.json.jbuilder","application.html.erb.bak","index.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","robots","usage","post_migration.rake"],"longSearchIndex":["applicationcontroller","applicationhelper","bracket","bracketcontest","bracketcontestant","bracketcontestscontroller","bracketcontestshelper","bracketgrouping","bracketgroupingscontroller","bracketpairing","bracketshelper","competition","competitionscontroller","competitionshelper","contest","contestant","customer","customeremailer","customersessionscontroller","customersessionshelper","customerscontroller","customershelper","displaycontroller","displayhelper","gamedate","gametime","grouping","groupingplace","groupingscontroller","groupingshelper","manager","managersessionscontroller","managersessionshelper","managerscontroller","navitem","nestedcontroller","nestedmodel","object","priorbracketcontest","rails","rails::myrspecgenerator","regularcontest","regularcontestant","regularcontestscontroller","regularcontestshelper","scorer","scorersessionscontroller","scorersessionshelper","scorerscontroller","scorershelper","supportemailer","team","teamscontroller","teamshelper","validdate","validdatescontroller","validdateshelper","venue","venuescontroller","venueshelper","welcomecontroller","welcomehelper","gametime#<()","contest#<=>()","gamedate#<=>()","gametime#<=>()","gametime#==()","gametime#>()","object#gamedate()","object#gametime()","bracketcontest#advance_contestants()","bracket::all_for()","bracketgrouping#all_participant_codes()","bracketcontest#all_priors()","grouping#all_subgroupings()","grouping#all_teams()","bracketgrouping::alll()","grouping#as_bracket()","manager#as_competition()","team#as_contestants()","team#as_regular_contestants()","bracketgrouping#assign_seeding_and_ccode()","customer::authenticate()","manager::authenticate()","scorer::authenticate()","competition::authenticate_manager()","contest#away_team_id()","contest#awaycontestant_fullname()","applicationhelper#bc_bot()","applicationhelper#bc_btopcontents()","applicationhelper#bc_btopcontentz()","applicationhelper#bc_mid()","applicationhelper#bc_midcontents()","applicationhelper#bc_to_adiv()","applicationhelper#bc_to_div()","applicationhelper#bc_to_hdiv()","applicationhelper#bc_to_pairdiv()","applicationhelper#bc_top()","bracketpairing#bottom()","bracketcontestant#briefname()","regularcontestscontroller#cancel()","managerscontroller#change_manager_password()","customerscontroller#change_password()","managerscontroller#change_scorer_password()","managerscontroller#choose_competition()","managerscontroller#choose_customer()","competition#clear_manager_password()","managerscontroller#clear_manager_password()","competition#clear_scorer_password()","managerscontroller#clear_scorer_password()","competition#compare_teams()","bracketgroupingscontroller#complete()","bracketgrouping#complete_se_matchups()","customerscontroller#confirm()","customer#confirmed?()","manager#conpetition_id()","contest#contestant_class()","bracketcontestant#contestantlabel()","bracketcontestant#contestanttype()","grouping#contests()","team#contests()","bracketcontestscontroller#create()","competitionscontroller#create()","customersessionscontroller#create()","customerscontroller#create()","groupingscontroller#create()","managersessionscontroller#create()","regularcontestscontroller#create()","scorersessionscontroller#create()","teamscontroller#create()","validdatescontroller#create()","venuescontroller#create()","customerscontroller#create_competition()","competition#create_new_salt()","competition#create_root_grouping()","bracketcontest::default_bracketgrouping()","contest::default_comp()","grouping::default_comp()","nestedmodel::default_comp()","team::default_comp()","validdate::default_comp()","venue::default_comp()","competition::default_cust()","competitionscontroller#destroy()","groupingscontroller#destroy()","regularcontestscontroller#destroy()","teamscontroller#destroy()","venuescontroller#destroy()","contest#display_date()","gamedate#display_date()","applicationcontroller#display_link_array()","team#display_pct()","contest#display_time()","gamedate#display_time()","contestant#draw()","team#draws()","gametime::dump()","regularcontestscontroller#dump()","bracketcontestscontroller#edit()","competitionscontroller#edit()","customerscontroller#edit()","groupingscontroller#edit()","regularcontestscontroller#edit()","teamscontroller#edit()","venuescontroller#edit()","competition::encrypted_password()","nestedcontroller#failure_redirect()","bracketgrouping#for_pair()","bracketcontestant#fullname()","competition#fullname()","contestant#fullname()","grouping#fullname()","customerscontroller#fullnav()","bracketgrouping#game_number()","gametime#gametimeindex()","team#goal_diff()","team#goals_against()","team#goals_for()","customerscontroller#greet()","managerscontroller#greet()","displayhelper#group_schedule_headers()","displayhelper#group_schedule_row()","displaycontroller#grouping()","contest#has_score?()","grouping#has_subgroupings?()","grouping#has_teams?()","grouping#hierarchy()","contest#home_team_id()","contest#homecontestant_fullname()","bracketgroupingscontroller#index()","competitionscontroller#index()","displaycontroller#index()","groupingscontroller#index()","regularcontestscontroller#index()","scorerscontroller#index()","teamscontroller#index()","venuescontroller#index()","welcomecontroller#index()","bracketpairing#inspect()","priorbracketcontest#inspect()","applicationhelper#instructions()","gametime::load()","customerscontroller#loggedout()","customersessionscontroller#logout()","customerscontroller#logout()","managersessionscontroller#logout()","scorersessionscontroller#logout()","bracketcontest#loser_code()","contestant#loss()","team#losses()","bracketpairing#lower_mid()","manager#manager_id()","applicationcontroller#manager_link_array()","competition#manager_password()","competition#manager_password=()","bracketpairing#middle_mid()","applicationhelper#navpanel()","applicationhelper#nav_panel()","applicationcontroller#nav_link_array()","customersessionscontroller#nav_link_array()","customerscontroller#nav_link_array()","displaycontroller#nav_link_array()","managersessionscontroller#nav_link_array()","managerscontroller#nav_link_array()","scorerscontroller#nav_link_array()","welcomecontroller#nav_link_array()","bracketcontestscontroller#nav_link_hash()","displaycontroller#nav_link_to_grouping()","applicationcontroller#navitem()","manager::needs_no_authentication()","scorer::needs_no_authentication()","contest#needs_score?()","groupingshelper#nested_groupings()","bracket::new()","bracketcontestscontroller#new()","bracketpairing::new()","competitionscontroller#new()","contest::new()","customer::new()","customersessionscontroller#new()","customerscontroller#new()","gametime::new()","groupingscontroller#new()","managersessionscontroller#new()","navitem::new()","regularcontestscontroller#new()","scorersessionscontroller#new()","teamscontroller#new()","venuescontroller#new()","customerscontroller#new_competition()","bracket#numrounds()","contestant#opponent()","customer#password()","customer#password=()","managerscontroller#passwords()","team#pct()","competition::playoffbracketlabels()","team#points()","competition::poolgroupseasonlabels()","bracketcontestant#priorcontest()","supportemailer#rant()","bracketcontest#record_result()","contest#record_result()","scorerscontroller#report()","competition#result_headings()","competition#result_row()","team#result_rowww()","regularcontestscontroller#roundrobin()","regularcontestscontroller#rrobin()","bracketcontestant#save()","competition#save()","contest#save_all!()","scorer#scorer_id()","applicationcontroller#scorer_link_array()","competition#scorer_password()","competition#scorer_password=()","bracketgrouping#se_matchups()","welcomecontroller#send_us_a_message()","bracketcontestscontroller#set_bracketgrouping()","nestedcontroller#set_competition()","bracketcontestscontroller#show()","bracketgroupingscontroller#show()","competitionscontroller#show()","groupingscontroller#show()","teamscontroller#show()","venuescontroller#show()","applicationhelper#spacer_div()","displayhelper#standings_headers()","displayhelper#standings_row()","contest::statuses()","grouping#subgroupings()","gametime#tbd?()","displaycontroller#team()","contestant#teamname()","contest::times()","gametime::times()","gametime#to_s()","bracketpairing#top()","competition#top_grouping()","customerscontroller#unconfirmed()","bracketcontestscontroller#update()","competitionscontroller#update()","customerscontroller#update()","groupingscontroller#update()","regularcontestscontroller#update()","teamscontroller#update()","venuescontroller#update()","customerscontroller#update_password()","bracketpairing#upper_mid()","contest#venue_name()","customeremailer#welcome()","customeremailer#welcomee()","contestant#win()","bracketcontest#winner_code()","team#wins()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","","<p>The methods in this Module are used by most or all views in the\napplication. Navigation is handled in …\n"],["Bracket","","Bracket.html","","<p>This class facilitates the display of Bracket contests, visually linking\nthem together so that the advancement …\n"],["Bracketcontest","","Bracketcontest.html","","<p>Bracketcontest adds functionality related to the contestants. Contestants\nmay be winners/losers of prior …\n"],["Bracketcontestant","","Bracketcontestant.html","","<p>A Bracketcontestant will eventually be a Team. However, before a specific\nTeam is identified as being …\n"],["BracketcontestsController","","BracketcontestsController.html","",""],["BracketcontestsHelper","","BracketcontestsHelper.html","",""],["Bracketgrouping","","Bracketgrouping.html","","<p>This class defines a Bracketgrouping for the purpose of collecting\nBracketcontests. A Bracketgrouping …\n"],["BracketgroupingsController","","BracketgroupingsController.html","","<p>This controller displays the available Bracketgroupings and allows the user\nto select one for updating …\n"],["Bracketpairing","","Bracketpairing.html","","<p>Objects of this class give details of the display of a Bracketcontest and\nalso link to the Bracketcontests …\n"],["BracketsHelper","","BracketsHelper.html","",""],["Competition","","Competition.html","","<p>This class contains the essentials for a Competition\n"],["CompetitionsController","","CompetitionsController.html","","<p>A Competition is created from the Customerscontroller.\n"],["CompetitionsHelper","","CompetitionsHelper.html","",""],["Contest","","Contest.html","","<p>This is the base class which contains the single table for all inherited\nContest classes (Regularcontest, …\n"],["Contestant","","Contestant.html","",""],["Customer","","Customer.html","",""],["CustomerEmailer","","CustomerEmailer.html","",""],["CustomerSessionsController","","CustomerSessionsController.html","",""],["CustomerSessionsHelper","","CustomerSessionsHelper.html","",""],["CustomersController","","CustomersController.html","","<p>In the routes file, Customer is a Singular Resource. A Customer establishes\na Session via a login page/action. …\n"],["CustomersHelper","","CustomersHelper.html","",""],["DisplayController","","DisplayController.html","",""],["DisplayHelper","","DisplayHelper.html","",""],["GameDate","","GameDate.html","",""],["GameTime","","GameTime.html","","<p>A GameTime is a time of day in five minute increments. An allowable value\nis “TBD” which means …\n"],["Grouping","","Grouping.html","","<p>This class defines collections of Teams for the purpose of Standings and/or\nPlayoffs, as well as limiting …\n"],["Groupingplace","","Groupingplace.html","",""],["GroupingsController","","GroupingsController.html","",""],["GroupingsHelper","","GroupingsHelper.html","",""],["Manager","","Manager.html","","\n<pre>This class defines a Manager for the purpose of controlling access to</pre>\n<p>the functions for Managing a Competition …\n"],["ManagerSessionsController","","ManagerSessionsController.html","",""],["ManagerSessionsHelper","","ManagerSessionsHelper.html","",""],["ManagersController","","ManagersController.html","","<p>Manager controller classes inherit from this class.\n"],["NavItem","","NavItem.html","","<p>This is a holder of values which define a Navigation Link Item.\n"],["NestedController","","NestedController.html","","<p>Controllers which operate on resources nested within Competition inherit\nfrom this controller class, …\n"],["Nestedmodel","","Nestedmodel.html","",""],["Object","","Object.html","",""],["Priorbracketcontest","","Priorbracketcontest.html","",""],["Rails","","Rails.html","",""],["Rails::MyRspecGenerator","","Rails/MyRspecGenerator.html","",""],["Regularcontest","","Regularcontest.html","","<p>Regularcontest is a faily simple class which adds little to the basic\nContest class.\n"],["Regularcontestant","","Regularcontestant.html","",""],["RegularcontestsController","","RegularcontestsController.html","",""],["RegularcontestsHelper","","RegularcontestsHelper.html","",""],["Scorer","","Scorer.html","","\n<pre>This class defines a Scorer for the purpose of controlling access to</pre>\n<p>the functions for Managing a Competition …\n"],["ScorerSessionsController","","ScorerSessionsController.html","",""],["ScorerSessionsHelper","","ScorerSessionsHelper.html","",""],["ScorersController","","ScorersController.html","",""],["ScorersHelper","","ScorersHelper.html","",""],["SupportEmailer","","SupportEmailer.html","",""],["Team","","Team.html","",""],["TeamsController","","TeamsController.html","",""],["TeamsHelper","","TeamsHelper.html","",""],["Validdate","","Validdate.html","",""],["ValiddatesController","","ValiddatesController.html","","<p>The only action this controler performs is to CREATE a ValidDate for a\nCompetition.\n"],["ValiddatesHelper","","ValiddatesHelper.html","",""],["Venue","","Venue.html","",""],["VenuesController","","VenuesController.html","",""],["VenuesHelper","","VenuesHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["<","GameTime","GameTime.html#method-i-3C","(other_gametime)","<p>This is less than other if this index is less than other index.\n"],["<=>","Contest","Contest.html#method-i-3C-3D-3E","(other_contest)",""],["<=>","GameDate","GameDate.html#method-i-3C-3D-3E","(other_contest)",""],["<=>","GameTime","GameTime.html#method-i-3C-3D-3E","(other_gametime)","<p>Compare this index to other index.\n"],["==","GameTime","GameTime.html#method-i-3D-3D","(other_gametime)","<p>Equal if indexes are equal.\n"],[">","GameTime","GameTime.html#method-i-3E","(other_gametime)","<p>This is greater than other if this index is greater than other index.\n"],["Gamedate","Object","Object.html#method-i-Gamedate","(gamedate)",""],["Gametime","Object","Object.html#method-i-Gametime","(gametime)","<p>Conversion functions\n"],["advance_contestants","Bracketcontest","Bracketcontest.html#method-i-advance_contestants","()","<p>Advance teams if this Bracketcontest is referred to by the contestants of a\nsubsequent Bracketcontest …\n"],["all_for","Bracket","Bracket.html#method-c-all_for","(bgrouping)","<p>Each Bracket is instantiated by a controller via this class method. This\nmethod first finds all terminal …\n"],["all_participant_codes","Bracketgrouping","Bracketgrouping.html#method-i-all_participant_codes","()",""],["all_priors","Bracketcontest","Bracketcontest.html#method-i-all_priors","()","<p>Returns Array of Bracketcontestants which refer to this Bracketcontest.\n"],["all_subgroupings","Grouping","Grouping.html#method-i-all_subgroupings","()","<p>Groupings directly within this Grouping plus Groupings within any\ndescendants of this Grouping.\n"],["all_teams","Grouping","Grouping.html#method-i-all_teams","()","<p>Teams directly within this Grouping plus Teams within any descendants of\nthis Grouping. Ordinarily there …\n"],["alll","Bracketgrouping","Bracketgrouping.html#method-c-alll","()",""],["as_bracket","Grouping","Grouping.html#method-i-as_bracket","()",""],["as_competition","Manager","Manager.html#method-i-as_competition","()","<p>Re-cast to inherited class\n"],["as_contestants","Team","Team.html#method-i-as_contestants","()","<p>Return an Array of all Contestants for which this is the Team.\n"],["as_regular_contestants","Team","Team.html#method-i-as_regular_contestants","()","<p>Return an Array of all Regularcontestants for which this is the Team. This\nis useful for the Team&#39;s …\n"],["assign_seeding_and_ccode","Bracketgrouping","Bracketgrouping.html#method-i-assign_seeding_and_ccode","(bc, seed_or_pair)",""],["authenticate","Customer","Customer.html#method-c-authenticate","(userid, password)",""],["authenticate","Manager","Manager.html#method-c-authenticate","(mgrid, mgrpw)",""],["authenticate","Scorer","Scorer.html#method-c-authenticate","(scorerid, scorerpw)",""],["authenticate_manager","Competition","Competition.html#method-c-authenticate_manager","(compid, mgrpw)",""],["away_team_id","Contest","Contest.html#method-i-away_team_id","()","<p>Team ID of Away Contestant, if any\n"],["awaycontestant_fullname","Contest","Contest.html#method-i-awaycontestant_fullname","()","<p>Full name can be customized for different contestant types.\n"],["bc_bot","ApplicationHelper","ApplicationHelper.html#method-i-bc_bot","(pair)",""],["bc_btopcontents","ApplicationHelper","ApplicationHelper.html#method-i-bc_btopcontents","(pair)",""],["bc_btopcontentz","ApplicationHelper","ApplicationHelper.html#method-i-bc_btopcontentz","(pair)",""],["bc_mid","ApplicationHelper","ApplicationHelper.html#method-i-bc_mid","(pair)",""],["bc_midcontents","ApplicationHelper","ApplicationHelper.html#method-i-bc_midcontents","(pair)",""],["bc_to_adiv","ApplicationHelper","ApplicationHelper.html#method-i-bc_to_adiv","(pairside)",""],["bc_to_div","ApplicationHelper","ApplicationHelper.html#method-i-bc_to_div","(pair)",""],["bc_to_hdiv","ApplicationHelper","ApplicationHelper.html#method-i-bc_to_hdiv","(pairside)",""],["bc_to_pairdiv","ApplicationHelper","ApplicationHelper.html#method-i-bc_to_pairdiv","(pair)",""],["bc_top","ApplicationHelper","ApplicationHelper.html#method-i-bc_top","(pair)",""],["bottom","Bracketpairing","Bracketpairing.html#method-i-bottom","()","<p>Text of the bottom portion of the Bracketpairing, that is, the Away Team.\n"],["briefname","Bracketcontestant","Bracketcontestant.html#method-i-briefname","()","<p>Provide conditional information.\n"],["cancel","RegularcontestsController","RegularcontestsController.html#method-i-cancel","()","<p>PATCH/PUT /regularcontests/cancel/1 PATCH/PUT\n/regularcontests/cancel/1.json\n"],["change_manager_password","ManagersController","ManagersController.html#method-i-change_manager_password","()","<p>Assign the Manager Password if it passes Validations.\n"],["change_password","CustomersController","CustomersController.html#method-i-change_password","()","<p>GET /customer/change_password\n"],["change_scorer_password","ManagersController","ManagersController.html#method-i-change_scorer_password","()","<p>Assign the Scorer Password if it passes Validations.\n"],["choose_competition","ManagersController","ManagersController.html#method-i-choose_competition","()",""],["choose_customer","ManagersController","ManagersController.html#method-i-choose_customer","()","<p>Display list of Customers for user to select one unless we ended up here\nafter a Competition has been …\n"],["clear_manager_password","Competition","Competition.html#method-i-clear_manager_password","()",""],["clear_manager_password","ManagersController","ManagersController.html#method-i-clear_manager_password","()","<p>Set Manager Password to NIL.\n"],["clear_scorer_password","Competition","Competition.html#method-i-clear_scorer_password","()",""],["clear_scorer_password","ManagersController","ManagersController.html#method-i-clear_scorer_password","()","<p>Set Scorer Password to NIL.\n"],["compare_teams","Competition","Competition.html#method-i-compare_teams","(a, b)","<p>Varies by sport\n"],["complete","BracketgroupingsController","BracketgroupingsController.html#method-i-complete","()","<p>GET /bracketgroupings/1\n"],["complete_se_matchups","Bracketgrouping","Bracketgrouping.html#method-i-complete_se_matchups","()","<p>Complete SingleElimination Matchups. Number of seeds is number of Teams in\nthis Bracketgrouping\n"],["confirm","CustomersController","CustomersController.html#method-i-confirm","()","<p>GET /customer/:id/confirm/:reg_confirm_token\n"],["confirmed?","Customer","Customer.html#method-i-confirmed-3F","()","<p>Initialize creates non-nil token and confirmation nils the token. Customer\nRegistration is confirmed …\n"],["conpetition_id","Manager","Manager.html#method-i-conpetition_id","()","<p>Is this needed?\n"],["contestant_class","Contest","Contest.html#method-i-contestant_class","()","<p>Attach the letters &#39;ant&#39; to the end of the class name of this\nContest subclass object to determine …\n"],["contestantlabel","Bracketcontestant","Bracketcontestant.html#method-i-contestantlabel","()","<p>Human-readable version of coded Contestant.\n"],["contestanttype","Bracketcontestant","Bracketcontestant.html#method-i-contestanttype","()","<p>Override with additional information.\n"],["contests","Grouping","Grouping.html#method-i-contests","()","<p>Return an Array of all Contests for which any Team in this Grouping is the\nTeam.\n"],["contests","Team","Team.html#method-i-contests","()","<p>Return an Array of all Contests for which this is one of the Teams.\n"],["create","BracketcontestsController","BracketcontestsController.html#method-i-create","()","<p>POST /bracketcontests POST /bracketcontests.json\n"],["create","CompetitionsController","CompetitionsController.html#method-i-create","()","<p>POST /competitions POST /competitions.json\n"],["create","CustomerSessionsController","CustomerSessionsController.html#method-i-create","()",""],["create","CustomersController","CustomersController.html#method-i-create","()","<p>POST /customers\n"],["create","GroupingsController","GroupingsController.html#method-i-create","()","<p>POST /groupings\n"],["create","ManagerSessionsController","ManagerSessionsController.html#method-i-create","()",""],["create","RegularcontestsController","RegularcontestsController.html#method-i-create","()","<p>POST /regularcontests POST /regularcontests.json\n"],["create","ScorerSessionsController","ScorerSessionsController.html#method-i-create","()",""],["create","TeamsController","TeamsController.html#method-i-create","()","<p>POST /teams\n"],["create","ValiddatesController","ValiddatesController.html#method-i-create","()","<p>POST /validdates POST /validdates.json\n"],["create","VenuesController","VenuesController.html#method-i-create","()","<p>POST /venues POST /venues.json\n"],["create_competition","CustomersController","CustomersController.html#method-i-create_competition","()","<p>POST /customer/create_competition\n"],["create_new_salt","Competition","Competition.html#method-i-create_new_salt","()","<p>Both passwords (manager and scorer) share the same salt. It is only\nassigned if  it is requested and …\n"],["create_root_grouping","Competition","Competition.html#method-i-create_root_grouping","()","<p>Used when creating a new Competition.\n"],["default_bracketgrouping","Bracketcontest","Bracketcontest.html#method-c-default_bracketgrouping","(bracketgrouping)","<p>Provide controlled public access to private class method.\n"],["default_comp","Contest","Contest.html#method-c-default_comp","(comp_id)",""],["default_comp","Grouping","Grouping.html#method-c-default_comp","(comp_id)",""],["default_comp","Nestedmodel","Nestedmodel.html#method-c-default_comp","(comp_id)",""],["default_comp","Team","Team.html#method-c-default_comp","(comp_id)","<p>Since default_scope is private, we use this to allow access.\n"],["default_comp","Validdate","Validdate.html#method-c-default_comp","(comp_id)",""],["default_comp","Venue","Venue.html#method-c-default_comp","(comp_id)",""],["default_cust","Competition","Competition.html#method-c-default_cust","(cust_id)","<p>Note that since this is not a subclass of NestedModel, we must write our\nown public method to access …\n"],["destroy","CompetitionsController","CompetitionsController.html#method-i-destroy","()","<p>DELETE /competitions/1 DELETE /competitions/1.json\n"],["destroy","GroupingsController","GroupingsController.html#method-i-destroy","()","<p>DELETE /groupings/1 DELETE /groupings/1.json\n"],["destroy","RegularcontestsController","RegularcontestsController.html#method-i-destroy","()","<p>DELETE /regularcontests/1 DELETE /regularcontests/1.json\n"],["destroy","TeamsController","TeamsController.html#method-i-destroy","()","<p>DELETE /teams/1\n"],["destroy","VenuesController","VenuesController.html#method-i-destroy","()","<p>DELETE /venues/1 DELETE /venues/1.json\n"],["display_date","Contest","Contest.html#method-i-display_date","()","<p>Convenience method. Display “TBD” for nil.\n"],["display_date","GameDate","GameDate.html#method-i-display_date","()","<p>Convenience method. Display “TBD” for nil.\n"],["display_link_array","ApplicationController","ApplicationController.html#method-i-display_link_array","()","<p>Link array for the public display portion of this application. The Display\nController should override …\n"],["display_pct","Team","Team.html#method-i-display_pct","()","<p>Display version of Winning Percentage.\n"],["display_time","Contest","Contest.html#method-i-display_time","()","<p>Convenience method. Display “TBD” for nil.\n"],["display_time","GameDate","GameDate.html#method-i-display_time","()","<p>Convenience method. Display “TBD” for nil.\n"],["draw","Contestant","Contestant.html#method-i-draw","()","<p>Draws (when used) are when the scores are equal.\n"],["draws","Team","Team.html#method-i-draws","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is equal to the opponent&#39;s …\n"],["dump","GameTime","GameTime.html#method-c-dump","(gametime)",""],["dump","RegularcontestsController","RegularcontestsController.html#method-i-dump","()","<p>GET /regularcontests GET /regularcontests.json\n"],["edit","BracketcontestsController","BracketcontestsController.html#method-i-edit","()","<p>GET /bracketcontests/1/edit\n"],["edit","CompetitionsController","CompetitionsController.html#method-i-edit","()","<p>GET /competitions/1/edit\n"],["edit","CustomersController","CustomersController.html#method-i-edit","()","<p>GET /customer/edit\n"],["edit","GroupingsController","GroupingsController.html#method-i-edit","()","<p>GET /groupings/1/edit\n"],["edit","RegularcontestsController","RegularcontestsController.html#method-i-edit","()","<p>GET /regularcontests/1/edit\n"],["edit","TeamsController","TeamsController.html#method-i-edit","()","<p>GET /teams/1/edit\n"],["edit","VenuesController","VenuesController.html#method-i-edit","()","<p>GET /venues/1/edit\n"],["encrypted_password","Competition","Competition.html#method-c-encrypted_password","(password, salt)",""],["failure_redirect","NestedController","NestedController.html#method-i-failure_redirect","()","<p>This specifies the url to redirect to if a Competition has not been\nspecified, or if an invalid Competition …\n"],["for_pair","Bracketgrouping","Bracketgrouping.html#method-i-for_pair","(bc_array)",""],["fullname","Bracketcontestant","Bracketcontestant.html#method-i-fullname","()","<p>Override with additional information.\n"],["fullname","Competition","Competition.html#method-i-fullname","()","<p>Name, Sport, and Variety of Competition, suitable for a title or heading.\n"],["fullname","Contestant","Contestant.html#method-i-fullname","()",""],["fullname","Grouping","Grouping.html#method-i-fullname","()","<p>Concatenated names from very top down to this Grouping.\n"],["fullnav","CustomersController","CustomersController.html#method-i-fullnav","()","<p>Use this Link Array when Customer is both Confirmed and Logged In.\n"],["game_number","Bracketgrouping","Bracketgrouping.html#method-i-game_number","()",""],["gametimeindex","GameTime","GameTime.html#method-i-gametimeindex","()","<p>Protected so that it is available for comparison purposes\n"],["goal_diff","Team","Team.html#method-i-goal_diff","()","<p>Goal Differential used in Soccer Results.\n"],["goals_against","Team","Team.html#method-i-goals_against","()","<p>Used for Soccer Results.\n"],["goals_for","Team","Team.html#method-i-goals_for","()","<p>Used for Soccer Results.\n"],["greet","CustomersController","CustomersController.html#method-i-greet","()","<p>GET /customers/1 GET /customers/1.json\n"],["greet","ManagersController","ManagersController.html#method-i-greet","()","<p>Initial page.\n"],["group_schedule_headers","DisplayHelper","DisplayHelper.html#method-i-group_schedule_headers","(comp)",""],["group_schedule_row","DisplayHelper","DisplayHelper.html#method-i-group_schedule_row","(comp, team)",""],["grouping","DisplayController","DisplayController.html#method-i-grouping","()",""],["has_score?","Contest","Contest.html#method-i-has_score-3F","()","<p>True if either Team has a score.\n"],["has_subgroupings?","Grouping","Grouping.html#method-i-has_subgroupings-3F","()","<p>Return true iff there exists at least one Grouping that identifies this as\nits Parent.\n"],["has_teams?","Grouping","Grouping.html#method-i-has_teams-3F","()","<p>Return true iff there exists at least one Team that identifies this as its\nGrouping.\n"],["hierarchy","Grouping","Grouping.html#method-i-hierarchy","()","<p>(Recursive) Return an Array with this Grouping appended to the end of the\nArray returned by sending this …\n"],["home_team_id","Contest","Contest.html#method-i-home_team_id","()","<p>Team ID of Home Contestant, if any\n"],["homecontestant_fullname","Contest","Contest.html#method-i-homecontestant_fullname","()","<p>Full name can be customized for different contestant types.\n"],["index","BracketgroupingsController","BracketgroupingsController.html#method-i-index","()","<p>GET /bracketgroupings\n"],["index","CompetitionsController","CompetitionsController.html#method-i-index","()","<p>GET /competitions GET /competitions.json\n"],["index","DisplayController","DisplayController.html#method-i-index","()",""],["index","GroupingsController","GroupingsController.html#method-i-index","()","<p>GET /groupings GET /groupings.json\n"],["index","RegularcontestsController","RegularcontestsController.html#method-i-index","()","<p>GET /regularcontests GET /regularcontests.json\n"],["index","ScorersController","ScorersController.html#method-i-index","()","<p>Create two lists of Contests, one of Contests with scores and one of\nContests without scores.\n"],["index","TeamsController","TeamsController.html#method-i-index","()","<p>Only show Teams for this Grouping GET /grouping/1/teams\n"],["index","VenuesController","VenuesController.html#method-i-index","()","<p>GET /venues GET /venues.json\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["inspect","Bracketpairing","Bracketpairing.html#method-i-inspect","()",""],["inspect","Priorbracketcontest","Priorbracketcontest.html#method-i-inspect","()",""],["instructions","ApplicationHelper","ApplicationHelper.html#method-i-instructions","()",""],["load","GameTime","GameTime.html#method-c-load","(raw)",""],["loggedout","CustomersController","CustomersController.html#method-i-loggedout","()","<p>Link Array.\n"],["logout","CustomerSessionsController","CustomerSessionsController.html#method-i-logout","()",""],["logout","CustomersController","CustomersController.html#method-i-logout","()",""],["logout","ManagerSessionsController","ManagerSessionsController.html#method-i-logout","()",""],["logout","ScorerSessionsController","ScorerSessionsController.html#method-i-logout","()",""],["loser_code","Bracketcontest","Bracketcontest.html#method-i-loser_code","()","<p>return the contestantcode for the Loser of this Bracketcontest\n"],["loss","Contestant","Contestant.html#method-i-loss","()","<p>But a Loss is a whole other thing…\n"],["losses","Team","Team.html#method-i-losses","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is less than the opponent&#39;s …\n"],["lower_mid","Bracketpairing","Bracketpairing.html#method-i-lower_mid","()","<p>Text in the middle of the pairing is two parts. This is the second of the\ntwo.\n"],["manager_id","Manager","Manager.html#method-i-manager_id","()","<p>Is this needed?\n"],["manager_link_array","ApplicationController","ApplicationController.html#method-i-manager_link_array","()","<p>Link array for Managers, who have access to everything related to the\napplication for a Competition. …\n"],["manager_password","Competition","Competition.html#method-i-manager_password","()","<p>manager_password is included on the HTML form and is sent with the HTTP\nrequest but hashed_manager_password …\n"],["manager_password=","Competition","Competition.html#method-i-manager_password-3D","(pwd)",""],["middle_mid","Bracketpairing","Bracketpairing.html#method-i-middle_mid","()","<p>Text of the middle is two parts. This is the first of the two.\n"],["navPanel","ApplicationHelper","ApplicationHelper.html#method-i-navPanel","()","<p>Start the process to produce a (nested) Unordered List of Links for\nNavigation.\n"],["nav_Panel","ApplicationHelper","ApplicationHelper.html#method-i-nav_Panel","(nav_level, link_array )","<p>Produce an Unordered List of Links for Navigation. This may be called\nrecursively.\n\n<pre>* ul_opts = HTML options ...</pre>\n"],["nav_link_array","ApplicationController","ApplicationController.html#method-i-nav_link_array","()","<p>Default link array. Should be overridden by controllers for this\napplication.\n"],["nav_link_array","CustomerSessionsController","CustomerSessionsController.html#method-i-nav_link_array","()","<p>Link Array.\n"],["nav_link_array","CustomersController","CustomersController.html#method-i-nav_link_array","()","<p>Link Array.\n"],["nav_link_array","DisplayController","DisplayController.html#method-i-nav_link_array","()","<p>Array of Grouping links can have nested Arrays of Grouping links, but it\nall starts at the top. No navigation …\n"],["nav_link_array","ManagerSessionsController","ManagerSessionsController.html#method-i-nav_link_array","()","<p>Link Array.\n"],["nav_link_array","ManagersController","ManagersController.html#method-i-nav_link_array","()","<p>Only display navigation links if we are working within a Competition. If we\nare still selecting the  …\n"],["nav_link_array","ScorersController","ScorersController.html#method-i-nav_link_array","()",""],["nav_link_array","WelcomeController","WelcomeController.html#method-i-nav_link_array","()",""],["nav_link_hash","BracketcontestsController","BracketcontestsController.html#method-i-nav_link_hash","()",""],["nav_link_to_grouping","DisplayController","DisplayController.html#method-i-nav_link_to_grouping","(grp)","<p>(Recursive) The navigation link to this grouping is followed by an Array of\nnavigation links to each …\n"],["navitem","ApplicationController","ApplicationController.html#method-i-navitem","(href, text, options={})",""],["needs_no_authentication","Manager","Manager.html#method-c-needs_no_authentication","(mgrid)",""],["needs_no_authentication","Scorer","Scorer.html#method-c-needs_no_authentication","(scorerid)",""],["needs_score?","Contest","Contest.html#method-i-needs_score-3F","()","<p>True if neither Team has a score.\n"],["nested_groupings","GroupingsHelper","GroupingsHelper.html#method-i-nested_groupings","(grp_level, grouping)","<p>Produce an Unordered List of Links for Navigation. This may be called\nrecursively.\n\n<pre>* ul_opts = HTML options ...</pre>\n"],["new","Bracket","Bracket.html#method-c-new","(bcontest)","<p>The instantiation of a Bracket begins with the terminal (“root”) pairing\nand grabs each prior …\n"],["new","BracketcontestsController","BracketcontestsController.html#method-i-new","()","<p>GET /bracketcontests/new\n"],["new","Bracketpairing","Bracketpairing.html#method-c-new","(bracket, rnum, bcontest)","<p>The containing Bracket object passes itself as a parameter so that this\nobject can add itself to its …\n"],["new","CompetitionsController","CompetitionsController.html#method-i-new","()","<p>GET /competitions/new\n"],["new","Contest","Contest.html#method-c-new","(attributes = nil, options = {})","<p>Each Contest (and all subclasses) must have two Contestants. We initialize\neach Contest with two shell …\n"],["new","Customer","Customer.html#method-c-new","(attributes = nil, options = {})","<p>Add creation of non-nil confirmation token to  inherited initialization.\n"],["new","CustomerSessionsController","CustomerSessionsController.html#method-i-new","()","<p>Prompts the Customer for ID and Password. The ID and Password will be used\nto authenticate the Customer …\n"],["new","CustomersController","CustomersController.html#method-i-new","()","<p>GET /customers/new\n"],["new","GameTime","GameTime.html#method-c-new","(whatever)","<p>Store an index value of zero unless we can make sense of whatever string\npassed in.\n"],["new","GroupingsController","GroupingsController.html#method-i-new","()","<p>GET /groupings/new\n"],["new","ManagerSessionsController","ManagerSessionsController.html#method-i-new","()","<p>new action requests prompt page for password. Manager ID must have been\nsupplied. If no password is required …\n"],["new","NavItem","NavItem.html#method-c-new","(href, text, options={css_class: \"nav\", target: nil})",""],["new","RegularcontestsController","RegularcontestsController.html#method-i-new","()","<p>GET /regularcontests/new\n"],["new","ScorerSessionsController","ScorerSessionsController.html#method-i-new","()",""],["new","TeamsController","TeamsController.html#method-i-new","()","<p>GET /grouping/1/teams/new\n"],["new","VenuesController","VenuesController.html#method-i-new","()","<p>GET /venues/new\n"],["new_competition","CustomersController","CustomersController.html#method-i-new_competition","()","<p>GET /customer/new_competition\n"],["numrounds","Bracket","Bracket.html#method-i-numrounds","()","<p>During construction of the collection of pairings, the round numbers start\nwith the “root”, …\n"],["opponent","Contestant","Contestant.html#method-i-opponent","()","<p>Returns instance of a descendant of Contestant class that is the other\ncontestant in the Contest with …\n"],["password","Customer","Customer.html#method-i-password","()",""],["password=","Customer","Customer.html#method-i-password-3D","(pwd)",""],["passwords","ManagersController","ManagersController.html#method-i-passwords","()","<p>Display page where Manager can set or clear either the Manager Password or\nthe Scorer Password.\n"],["pct","Team","Team.html#method-i-pct","()","<p>Winning Percentage, expressed as a decimal.\n"],["playoffbracketlabels","Competition","Competition.html#method-c-playoffbracketlabels","()",""],["points","Team","Team.html#method-i-points","()","<p>Used for soccer results.\n"],["poolgroupseasonlabels","Competition","Competition.html#method-c-poolgroupseasonlabels","()",""],["priorcontest","Bracketcontestant","Bracketcontestant.html#method-i-priorcontest","()","<p>Prior Bracketcontest referred to by this Contestant.\n"],["rant","SupportEmailer","SupportEmailer.html#method-i-rant","(paramhash)","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">en</span>.<span class=\"ruby-identifier\">support_emailer</span>.<span class=\"ruby-identifier\">rant</span>.<span class=\"ruby-identifier\">subject</span>\n</pre>\n"],["record_result","Bracketcontest","Bracketcontest.html#method-i-record_result","(homescore, awayscore, status=\"COMPLETED\")","<p>Assign score to each Bracketcontestant and status to entire Bracketcontest.\nSave all three records in …\n"],["record_result","Contest","Contest.html#method-i-record_result","(homescore, awayscore, status=\"COMPLETED\")","<p>Assign score to each Contestant and status to entire Contest. Save all\nthree records in a single transaction. …\n"],["report","ScorersController","ScorersController.html#method-i-report","()","<p>PATCH for reporting a score or correcting a score. Note that we can report\nthe score of any type of  …\n"],["result_headings","Competition","Competition.html#method-i-result_headings","()","<p>Display table headings for Standings for a Grouping or for a Team&#39;s\nrecord.\n"],["result_row","Competition","Competition.html#method-i-result_row","()","<p>Varies by sport\n"],["result_rowww","Team","Team.html#method-i-result_rowww","(competition)","<p>Varies by sport. (Deprecated?)\n"],["roundrobin","RegularcontestsController","RegularcontestsController.html#method-i-roundrobin","()","<p>POST/regularcontests/roundrobin POST /regularcontests/roundrobin.json\n"],["rrobin","RegularcontestsController","RegularcontestsController.html#method-i-rrobin","()","<p>GET/regularcontests/rrobin GET /regularcontests/rrobin.json\n"],["save","Bracketcontestant","Bracketcontestant.html#method-i-save","(*)","<p>Override with automatic save of bcspec, if it exists.\n"],["save","Competition","Competition.html#method-i-save","()","<p>Override by adding creation of a root Grouping if this save is a creation\nsave ass opposed to an update …\n"],["save_all!","Contest","Contest.html#method-i-save_all-21","()",""],["scorer_id","Scorer","Scorer.html#method-i-scorer_id","()",""],["scorer_link_array","ApplicationController","ApplicationController.html#method-i-scorer_link_array","()","<p>Link array for scorers, who can also open up the public display portion of\nthis application in a separate …\n"],["scorer_password","Competition","Competition.html#method-i-scorer_password","()","<p>scorer_password is included on the HTML form and is sent with the HTTP\nrequest but hashed_scorer_password …\n"],["scorer_password=","Competition","Competition.html#method-i-scorer_password-3D","(pwd)",""],["se_matchups","Bracketgrouping","Bracketgrouping.html#method-i-se_matchups","(numseeds)","<p>SingleElimination Matchups. Takes the number of seeds (i.e. Teams)\n"],["send_us_a_message","WelcomeController","WelcomeController.html#method-i-send_us_a_message","()",""],["set_bracketgrouping","BracketcontestsController","BracketcontestsController.html#method-i-set_bracketgrouping","()",""],["set_competition","NestedController","NestedController.html#method-i-set_competition","(competition_id)","<p>If a Competition has been specified, then set the scope for all nested\nresources to that Competition …\n"],["show","BracketcontestsController","BracketcontestsController.html#method-i-show","()","<p>GET /bracketcontests/1 GET /bracketcontests/1.json\n"],["show","BracketgroupingsController","BracketgroupingsController.html#method-i-show","()","<p>GET /bracketgroupings/1\n"],["show","CompetitionsController","CompetitionsController.html#method-i-show","()","<p>GET /competitions/1 GET /competitions/1.json\n"],["show","GroupingsController","GroupingsController.html#method-i-show","()","<p>GET /groupings/1 GET /groupings/1.json\n"],["show","TeamsController","TeamsController.html#method-i-show","()","<p>GET /teams/1\n"],["show","VenuesController","VenuesController.html#method-i-show","()","<p>GET /venues/1 GET /venues/1.json\n"],["spacer_div","ApplicationHelper","ApplicationHelper.html#method-i-spacer_div","(roundnum)",""],["standings_headers","DisplayHelper","DisplayHelper.html#method-i-standings_headers","(comp)",""],["standings_row","DisplayHelper","DisplayHelper.html#method-i-standings_row","(comp, team)",""],["statuses","Contest","Contest.html#method-c-statuses","()","<p>Create a collection of contest statuses. This will be used to display\nselection choices and for validation. …\n"],["subgroupings","Grouping","Grouping.html#method-i-subgroupings","()","<p>Return the Collection of Groupings that identify this as their Parent.\n"],["tbd?","GameTime","GameTime.html#method-i-tbd-3F","()","<p>TBD means ToBeDetermined which we want to sort before any definite time.\n"],["team","DisplayController","DisplayController.html#method-i-team","()",""],["teamname","Contestant","Contestant.html#method-i-teamname","()",""],["times","Contest","Contest.html#method-c-times","()","<p>Create a collection of times throughout the day in five minute increments.\nThis will be used to display …\n"],["times","GameTime","GameTime.html#method-c-times","()","<p>Create a collection of times throughout the day in five minute increments.\nThis will be used to display …\n"],["to_s","GameTime","GameTime.html#method-i-to_s","()","<p>Display “TBD” for unspecified or invalid time.  Display “hh:mm AM/PM” for\nvalid times. …\n"],["top","Bracketpairing","Bracketpairing.html#method-i-top","()","<p>Text of the top portion of the Bracketpairing, that is, the Home Team.\n"],["top_grouping","Competition","Competition.html#method-i-top_grouping","()","<p>This Competition&#39;s Grouping which has no parent.\n"],["unconfirmed","CustomersController","CustomersController.html#method-i-unconfirmed","()","<p>Use this Link Array when Customer has Logged In but is not yet Confirmed.\n"],["update","BracketcontestsController","BracketcontestsController.html#method-i-update","()","<p>PATCH/PUT /bracketcontests/1 PATCH/PUT /bracketcontests/1.json\n"],["update","CompetitionsController","CompetitionsController.html#method-i-update","()","<p>PATCH/PUT /competitions/1 PATCH/PUT /competitions/1.json\n"],["update","CustomersController","CustomersController.html#method-i-update","()","<p>PATCH/PUT /customers/1\n"],["update","GroupingsController","GroupingsController.html#method-i-update","()","<p>PATCH/PUT /groupings/1 PATCH/PUT /groupings/1.json\n"],["update","RegularcontestsController","RegularcontestsController.html#method-i-update","()","<p>PATCH/PUT /regularcontests/1 PATCH/PUT /regularcontests/1.json\n"],["update","TeamsController","TeamsController.html#method-i-update","()","<p>PATCH/PUT /teams/1\n"],["update","VenuesController","VenuesController.html#method-i-update","()","<p>PATCH/PUT /venues/1 PATCH/PUT /venues/1.json\n"],["update_password","CustomersController","CustomersController.html#method-i-update_password","()","<p>PATCH/PUT /customers/1\n"],["upper_mid","Bracketpairing","Bracketpairing.html#method-i-upper_mid","()","<p>Text of the middle is two parts. This is the first of the two.\n"],["venue_name","Contest","Contest.html#method-i-venue_name","()","<p>Convenience method. Display “TBD” for nil.\n"],["welcome","CustomerEmailer","CustomerEmailer.html#method-i-welcome","(customer)","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">en</span>.<span class=\"ruby-identifier\">customer_emailer</span>.<span class=\"ruby-identifier\">welcome</span>.<span class=\"ruby-identifier\">subject</span>\n</pre>\n"],["welcomee","CustomerEmailer","CustomerEmailer.html#method-i-welcomee","(recipient)",""],["win","Contestant","Contestant.html#method-i-win","()","<p>A Win is a Win…\n"],["winner_code","Bracketcontest","Bracketcontest.html#method-i-winner_code","()","<p>return the contestantcode for the Winner of this Bracketcontest\n"],["wins","Team","Team.html#method-i-wins","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is more than the opponent&#39;s …\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["bracketcontests.js.coffee","","app/assets/javascripts/bracketcontests_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["competitions.js.coffee","","app/assets/javascripts/competitions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["customer_sessions.js.coffee","","app/assets/javascripts/customer_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["customers.js.coffee","","app/assets/javascripts/customers_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["display.js.coffee","","app/assets/javascripts/display_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["groupings.js.coffee","","app/assets/javascripts/groupings_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["manager_sessions.js.coffee","","app/assets/javascripts/manager_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["regularcontests.js.coffee","","app/assets/javascripts/regularcontests_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["result_sessions.js.coffee","","app/assets/javascripts/result_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["results.js","","app/assets/javascripts/results_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["results.js.coffee","","app/assets/javascripts/results_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["teams.js.coffee","","app/assets/javascripts/teams_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["validdates.js.coffee","","app/assets/javascripts/validdates_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["venues.js.coffee","","app/assets/javascripts/venues_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["welcome.js.coffee","","app/assets/javascripts/welcome_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.css","","app/assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["bracketcontests.css.scss","","app/assets/stylesheets/bracketcontests_css_scss.html","","<p>// Place all the styles related to the bracketcontests controller here. //\nThey will automatically be …\n"],["common.css","","app/assets/stylesheets/common_css.html","","\n<pre>       Global styling   \n\n  html, body {height: 100%;\n              padding: 0;\n              margin: ...</pre>\n"],["competitions.css.scss","","app/assets/stylesheets/competitions_css_scss.html","","<p>// Place all the styles related to the competitions controller here. //\nThey will automatically be included …\n"],["customer_sessions.css.scss","","app/assets/stylesheets/customer_sessions_css_scss.html","","<p>// Place all the styles related to the customer_sessions controller here.\n// They will automatically …\n"],["customers.css.scss","","app/assets/stylesheets/customers_css_scss.html","","<p>// Place all the styles related to the customers controller here. // They\nwill automatically be included …\n"],["display.css.scss","","app/assets/stylesheets/display_css_scss.html","","<p>// Place all the styles related to the display controller here. // They\nwill automatically be included …\n"],["groupings.css.scss","","app/assets/stylesheets/groupings_css_scss.html","","<p>// Place all the styles related to the groupings controller here. // They\nwill automatically be included …\n"],["manager_sessions.css.scss","","app/assets/stylesheets/manager_sessions_css_scss.html","","<p>// Place all the styles related to the manager_sessions controller here. //\nThey will automatically be …\n"],["regularcontests.css.scss","","app/assets/stylesheets/regularcontests_css_scss.html","","<p>// Place all the styles related to the regularcontests controller here. //\nThey will automatically be …\n"],["scaffolds.css.scss","","app/assets/stylesheets/scaffolds_css_scss.html","","\n<pre>Disabled default by renaming &quot;body&quot; to &quot;bbody&quot;</pre>\n<p>bbody {\n\n<pre>background-color: #fff;\ncolor: #333;\nfont-family: ...</pre>\n"],["scorer_sessions.css.scss","","app/assets/stylesheets/scorer_sessions_css_scss.html","","<p>// Place all the styles related to the result_sessions controller here. //\nThey will automatically be …\n"],["scorers.css.scss","","app/assets/stylesheets/scorers_css_scss.html","","<p>// Place all the styles related to the results controller here. // They\nwill automatically be included …\n"],["teams.css.scss","","app/assets/stylesheets/teams_css_scss.html","","<p>// Place all the styles related to the teams controller here. // They will\nautomatically be included …\n"],["validdates.css.scss","","app/assets/stylesheets/validdates_css_scss.html","","<p>// Place all the styles related to the validdates controller here. // They\nwill automatically be included …\n"],["venues.css.scss","","app/assets/stylesheets/venues_css_scss.html","","<p>// Place all the styles related to the venues controller here. // They will\nautomatically be included …\n"],["welcome.css.scss","","app/assets/stylesheets/welcome_css_scss.html","","<p>// Place all the styles related to the welcome controller here. // They\nwill automatically be included …\n"],["index.json.jbuilder","","app/views/bracketgroupings/index_json_jbuilder.html","","<p>json.array!(@brackets) do |bracket|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">extract!</span> <span class=\"ruby-identifier\">bracket</span>, :<span class=\"ruby-identifier\">id</span>\n<span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">url</span> <span class=\"ruby-identifier\">bracket_url</span>(<span class=\"ruby-identifier\">bracket</span>, <span class=\"ruby-identifier\">format</span><span class=\"ruby-operator\">:</span> :<span class=\"ruby-identifier\">json</span>)\n</pre>\n"],["show.json.jbuilder","","app/views/bracketgroupings/show_json_jbuilder.html","","<p>json.extract! @bracket, :id, :created_at, :updated_at\n"],["index.json.jbuilder","","app/views/competitions/index_json_jbuilder.html","","<p>json.array!(@competitions) do |competition|\n\n<pre>json.extract! competition, :id, :name, :sport, :variety, :poolgroupseason, ...</pre>\n"],["show.json.jbuilder","","app/views/competitions/show_json_jbuilder.html","","<p>json.extract! @competition, :id, :name, :sport, :variety, :poolgroupseason,\n:poolgroupseasonlabel, :playoffbracket, …\n"],["index.json.jbuilder","","app/views/customers/index_json_jbuilder.html","","<p>json.array!(@customers) do |customer|\n\n<pre>json.extract! customer, :id, :userid, :hashed_password, :salt\njson.url ...</pre>\n"],["show.json.jbuilder","","app/views/customers/show_json_jbuilder.html","","<p>json.extract! @customer, :id, :userid, :hashed_password, :salt,\n:created_at, :updated_at\n"],["ydivvy.html","","app/views/display/ydivvy_html.html","","<p>&lt;html&gt;\n\n<pre>&lt;head&gt;\n &lt;style&gt;\n  div.bc { display: table-cell;\n               background-color: yellow;} ...</pre>\n"],["zdivvy.html","","app/views/display/zdivvy_html.html","","<p>&lt;html&gt;\n\n<pre>&lt;head&gt;\n &lt;style&gt;\n  div.bc { display: table-cell;\n               text-align: right;}\n\n  div.bcThird ...</pre>\n"],["index.json.jbuilder","","app/views/groupings/index_json_jbuilder.html","","<p>json.array!(@groupings) do |grouping|\n\n<pre>json.extract! grouping, :id, :competition_id, :name, :parent_id ...</pre>\n"],["show.json.jbuilder","","app/views/groupings/show_json_jbuilder.html","","<p>json.extract! @grouping, :id, :competition_id, :name, :parent_id,\n:created_at, :updated_at\n"],["application.html.erb.bak","","app/views/layouts/application_html_erb_bak.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;Scoreboard - &lt;%= controller.class.to_s.rpartition(&#39;C&#39;)[0] ...</pre>\n"],["index.json.jbuilder","","app/views/regularcontests/index_json_jbuilder.html","","<p>json.array!(@regularcontests) do |regularcontest|\n\n<pre>json.extract! regularcontest, :id\njson.url regularcontest_url(regularcontest, ...</pre>\n"],["index.json.jbuilder","","app/views/teams/index_json_jbuilder.html","","<p>json.array!(@teams) do |team|\n\n<pre>json.extract! team, :id, :competition_id, :name, :grouping_id\njson.url team_url(team, ...</pre>\n"],["show.json.jbuilder","","app/views/teams/show_json_jbuilder.html","","<p>json.extract! @team, :id, :competition_id, :name, :grouping_id,\n:created_at, :updated_at\n"],["index.json.jbuilder","","app/views/validdates/index_json_jbuilder.html","","<p>json.array!(@validdates) do |validdate|\n\n<pre>json.extract! validdate, :id, :gamedate, :competition_id\njson.url ...</pre>\n"],["show.json.jbuilder","","app/views/validdates/show_json_jbuilder.html","","<p>json.extract! @validdate, :id, :gamedate, :competition_id, :created_at,\n:updated_at\n"],["index.json.jbuilder","","app/views/venues/index_json_jbuilder.html","","<p>json.array!(@venues) do |venue|\n\n<pre>json.extract! venue, :id, :name, :competition_id\njson.url venue_url(venue, ...</pre>\n"],["show.json.jbuilder","","app/views/venues/show_json_jbuilder.html","","<p>json.extract! @venue, :id, :name, :competition_id, :created_at, :updated_at\n"],["robots","","app/views/welcome/robots_txt.html","","<p>User-agent: * Disallow: /admin/ Disallow: /classes/ Disallow: /customer/\nDisallow: /images/ Disallow: …\n"],["USAGE","","lib/generators/rails/my_rspec/USAGE.html","","<p>Description:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Explain</span> <span class=\"ruby-identifier\">the</span> <span class=\"ruby-identifier\">generator</span>\n</pre>\n<p>Example:\n"],["post_migration.rake","","lib/tasks/post_migration_rake.html","","<p>namespace :bcspec do\n\n<pre>desc &quot;TODO&quot;\ntask populate: :environment do\n  p &quot;Howdy&quot;\n  puts Bracketcontestant.all.first.methods.sort.join(&quot; ...</pre>\n"]]}}