var search_data = {"index":{"searchIndex":["alertrequest","applicationcontroller","applicationhelper","bcadvancement","bracketcontest","bracketcontestant","bracketcontestscontroller","bracketcontestshelper","bracketgrouping","bracketgroupingscontroller","bracketshelper","competition","competitionscontroller","competitionshelper","contest","contestant","customeremailer","displaycontroller","displayhelper","emailalert","gametime","grouping","groupingplace","groupingscontroller","groupingshelper","manager","managersessionscontroller","managersessionshelper","managerscontroller","nestedcontroller","nestedmodel","object","organization","organizationscontroller","organizationshelper","regularcontest","regularcontestant","regularcontestscontroller","regularcontestshelper","smsalert","scorer","scorersessionscontroller","scorersessionshelper","scorerscontroller","scorershelper","supportemailer","team","teamscontroller","teamshelper","validtime","validtimescontroller","validtimeshelper","validdate","validdatescontroller","validdateshelper","venue","venuescontroller","venueshelper","welcomecontroller","welcomehelper","<()","<=>()","<=>()","==()",">()","gamedate()","gametime()","advance_contestants()","alert_request()","all_participant_codes()","all_priors()","all_subgroupings()","all_teams()","alll()","as_bracketgrouping()","as_competition()","as_contestants()","as_regular_contestants()","assign_seeding_and_ccode()","authenticate()","authenticate()","authenticate_manager()","away_team_and_score()","bracketdepth()","bracketdepth()","briefname()","cancel()","change_manager_password()","change_scorer_password()","clear_manager_password()","clear_manager_password()","clear_scorer_password()","clear_scorer_password()","compare_teams()","complete()","complete_create()","complete_delete()","complete_se_matchups()","conpetition_id()","contestant_class()","contestantcode()","contestantcode=()","contestantlabel()","contestanttype()","contests()","contests_by_type()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_competition()","create_new_salt()","create_root_grouping()","default()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","display_date()","display_from_time()","display_link_array()","display_pct()","display_time()","display_to_time()","draw()","draws()","dump()","dump()","earliest()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","encrypted_password()","failure_redirect()","for_pair()","fullname()","fullname()","fullname()","fullname()","fullnav()","game_number()","gametimeindex()","goal_diff()","goals_against()","goals_for()","greet()","greet()","group_results_section_label()","group_schedule_headers()","group_schedule_row()","group_schedule_section_label()","group_section_label()","grouping()","grouping_name()","has_prior?()","has_score?()","has_subgroupings?()","has_teams?()","hierarchy()","home_team_and_score()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","inspect()","inspect()","instructions()","label()","label()","latest()","load()","logout()","logout()","loser_code()","losing_team_and_score()","loss()","losses()","manager_id()","manager_link_array()","manager_password()","manager_password=()","navpanel()","nav_panel()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_array()","nav_link_hash()","nav_link_to_grouping()","navitem()","needs_no_authentication()","needs_no_authentication()","needs_score?()","nested_groupings()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_competition()","opponent()","passwords()","pct()","playoffbracketlabels()","points()","poolgroupseasonlabels()","priorcontest()","rant()","record_result()","record_result()","report()","result_headings()","result_row()","roundrobin()","rrobin()","save()","save()","save()","save!()","save!()","scorer_id()","scorer_link_array()","scorer_password()","scorer_password=()","scores_by_type()","se_matchups()","select_from_objects()","select_options()","send_us_a_message()","set_alert()","set_bracketgrouping()","set_competition()","show()","show()","show()","show()","show()","show()","show()","standings_headers()","standings_row()","statuses()","subgroupings()","tbd?()","team()","team_link_for()","teamname()","times()","to_s()","top_grouping()","unique_contests()","update()","update()","update()","update()","update()","update()","update()","update()","valid_times_as_select_options()","valid_times_sorted()","venue_name()","venue_name()","welcome()","win()","winner_code()","winning_team_and_score()","wins()","application.js","bracketcontests.js","bracketcontests.js.coffee","competitions.js.coffee","customer_sessions.js.coffee","customers.js.coffee","display.js.coffee","groupings.js.coffee","manager_sessions.js.coffee","regularcontests.js.coffee","result_sessions.js.coffee","results.js","results.js.coffee","teams.js.coffee","valid_times.js","valid_times.js.coffee","validdates.js.coffee","venues.js.coffee","welcome.js.coffee","application.css","bracketcontests.css.scss","common.css","competitions.css.scss","display.css.scss","groupings.css.scss","manager_sessions.css.scss","organizations.css.scss","regularcontests.css.scss","scaffolds.css.scss","scorer_sessions.css.scss","scorers.css.scss","teams.css.scss","valid_times.css.scss","validdates.css.scss","venues.css.scss","welcome.css.scss","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","ydivvy.html","zdivvy.html","index.json.jbuilder","show.json.jbuilder","application.html.erb.bak","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","index.json.jbuilder","show.json.jbuilder","robots"],"longSearchIndex":["alertrequest","applicationcontroller","applicationhelper","bcadvancement","bracketcontest","bracketcontestant","bracketcontestscontroller","bracketcontestshelper","bracketgrouping","bracketgroupingscontroller","bracketshelper","competition","competitionscontroller","competitionshelper","contest","contestant","customeremailer","displaycontroller","displayhelper","emailalert","gametime","grouping","groupingplace","groupingscontroller","groupingshelper","manager","managersessionscontroller","managersessionshelper","managerscontroller","nestedcontroller","nestedmodel","object","organization","organizationscontroller","organizationshelper","regularcontest","regularcontestant","regularcontestscontroller","regularcontestshelper","smsalert","scorer","scorersessionscontroller","scorersessionshelper","scorerscontroller","scorershelper","supportemailer","team","teamscontroller","teamshelper","validtime","validtimescontroller","validtimeshelper","validdate","validdatescontroller","validdateshelper","venue","venuescontroller","venueshelper","welcomecontroller","welcomehelper","gametime#<()","contest#<=>()","gametime#<=>()","gametime#==()","gametime#>()","object#gamedate()","object#gametime()","bracketcontest#advance_contestants()","displaycontroller#alert_request()","bracketgrouping#all_participant_codes()","bracketcontest#all_priors()","grouping#all_subgroupings()","grouping#all_teams()","bracketgrouping::alll()","grouping#as_bracketgrouping()","manager#as_competition()","team#as_contestants()","team#as_regular_contestants()","bracketgrouping#assign_seeding_and_ccode()","manager::authenticate()","scorer::authenticate()","competition::authenticate_manager()","contest#away_team_and_score()","bracketcontest#bracketdepth()","bracketcontestant#bracketdepth()","bracketcontestant#briefname()","regularcontestscontroller#cancel()","managerscontroller#change_manager_password()","managerscontroller#change_scorer_password()","competition#clear_manager_password()","managerscontroller#clear_manager_password()","competition#clear_scorer_password()","managerscontroller#clear_scorer_password()","competition#compare_teams()","bracketgroupingscontroller#complete()","bracketgroupingscontroller#complete_create()","bracketgroupingscontroller#complete_delete()","bracketgrouping#complete_se_matchups()","manager#conpetition_id()","contest#contestant_class()","bracketcontestant#contestantcode()","bracketcontestant#contestantcode=()","bracketcontestant#contestantlabel()","bracketcontestant#contestanttype()","team#contests()","displayhelper#contests_by_type()","bracketcontestscontroller#create()","competitionscontroller#create()","groupingscontroller#create()","managersessionscontroller#create()","organizationscontroller#create()","regularcontestscontroller#create()","scorersessionscontroller#create()","teamscontroller#create()","validtimescontroller#create()","validdatescontroller#create()","venuescontroller#create()","organizationscontroller#create_competition()","competition#create_new_salt()","competition#create_root_grouping()","validtime::default()","bracketcontestscontroller#destroy()","competitionscontroller#destroy()","groupingscontroller#destroy()","regularcontestscontroller#destroy()","teamscontroller#destroy()","validtimescontroller#destroy()","venuescontroller#destroy()","contest#display_date()","validtime#display_from_time()","applicationcontroller#display_link_array()","team#display_pct()","contest#display_time()","validtime#display_to_time()","contestant#draw()","team#draws()","gametime::dump()","regularcontestscontroller#dump()","gametime::earliest()","bracketcontestscontroller#edit()","competitionscontroller#edit()","groupingscontroller#edit()","organizationscontroller#edit()","regularcontestscontroller#edit()","teamscontroller#edit()","validtimescontroller#edit()","venuescontroller#edit()","competition::encrypted_password()","nestedcontroller#failure_redirect()","bracketgrouping#for_pair()","bracketcontestant#fullname()","competition#fullname()","contestant#fullname()","grouping#fullname()","organizationscontroller#fullnav()","bracketgrouping#game_number()","gametime#gametimeindex()","team#goal_diff()","team#goals_against()","team#goals_for()","managerscontroller#greet()","organizationscontroller#greet()","displayhelper#group_results_section_label()","displayhelper#group_schedule_headers()","displayhelper#group_schedule_row()","displayhelper#group_schedule_section_label()","displayhelper#group_section_label()","displaycontroller#grouping()","validtime#grouping_name()","bracketcontest#has_prior?()","contest#has_score?()","grouping#has_subgroupings?()","grouping#has_teams?()","grouping#hierarchy()","contest#home_team_and_score()","bracketgroupingscontroller#index()","competitionscontroller#index()","displaycontroller#index()","groupingscontroller#index()","regularcontestscontroller#index()","scorerscontroller#index()","teamscontroller#index()","validtimescontroller#index()","venuescontroller#index()","welcomecontroller#index()","bcadvancement#inspect()","groupingplace#inspect()","applicationhelper#instructions()","bcadvancement#label()","groupingplace#label()","gametime::latest()","gametime::load()","managersessionscontroller#logout()","scorersessionscontroller#logout()","bracketcontest#loser_code()","contest#losing_team_and_score()","contestant#loss()","team#losses()","manager#manager_id()","applicationcontroller#manager_link_array()","competition#manager_password()","competition#manager_password=()","applicationhelper#navpanel()","applicationhelper#nav_panel()","applicationcontroller#nav_link_array()","displaycontroller#nav_link_array()","managersessionscontroller#nav_link_array()","managerscontroller#nav_link_array()","organizationscontroller#nav_link_array()","scorerscontroller#nav_link_array()","welcomecontroller#nav_link_array()","bracketcontestscontroller#nav_link_hash()","displaycontroller#nav_link_to_grouping()","applicationcontroller#navitem()","manager::needs_no_authentication()","scorer::needs_no_authentication()","contest#needs_score?()","groupingshelper#nested_groupings()","bracketcontestscontroller#new()","competitionscontroller#new()","contest::new()","gametime::new()","groupingscontroller#new()","managersessionscontroller#new()","organizationscontroller#new()","regularcontestscontroller#new()","scorersessionscontroller#new()","teamscontroller#new()","validtimescontroller#new()","venuescontroller#new()","organizationscontroller#new_competition()","contestant#opponent()","managerscontroller#passwords()","team#pct()","competition::playoffbracketlabels()","team#points()","competition::poolgroupseasonlabels()","bracketcontestant#priorcontest()","supportemailer#rant()","bracketcontest#record_result()","contest#record_result()","scorerscontroller#report()","competition#result_headings()","competition#result_row()","regularcontestscontroller#roundrobin()","regularcontestscontroller#rrobin()","bracketcontestant#save()","competition#save()","contest#save()","bracketcontestant#save!()","contest#save!()","scorer#scorer_id()","applicationcontroller#scorer_link_array()","competition#scorer_password()","competition#scorer_password=()","displayhelper#scores_by_type()","bracketgrouping#se_matchups()","applicationhelper#select_from_objects()","validtime#select_options()","welcomecontroller#send_us_a_message()","displaycontroller#set_alert()","bracketcontestscontroller#set_bracketgrouping()","nestedcontroller#set_competition()","bracketcontestscontroller#show()","bracketgroupingscontroller#show()","competitionscontroller#show()","groupingscontroller#show()","teamscontroller#show()","validtimescontroller#show()","venuescontroller#show()","displayhelper#standings_headers()","displayhelper#standings_row()","contest::statuses()","grouping#subgroupings()","gametime#tbd?()","displaycontroller#team()","displayhelper#team_link_for()","contestant#teamname()","gametime::times()","gametime#to_s()","competition#top_grouping()","grouping#unique_contests()","bracketcontestscontroller#update()","competitionscontroller#update()","groupingscontroller#update()","organizationscontroller#update()","regularcontestscontroller#update()","teamscontroller#update()","validtimescontroller#update()","venuescontroller#update()","competition#valid_times_as_select_options()","competition#valid_times_sorted()","contest#venue_name()","validtime#venue_name()","customeremailer#welcome()","contestant#win()","bracketcontest#winner_code()","contest#winning_team_and_score()","team#wins()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["AlertRequest","","AlertRequest.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","","<p>The methods in this Module are used by most or all views in the\napplication. Navigation is handled in …\n"],["Bcadvancement","","Bcadvancement.html","",""],["Bracketcontest","","Bracketcontest.html","","<p>Bracketcontest adds functionality related to the contestants. Contestants\nmay be winners/losers of prior …\n"],["Bracketcontestant","","Bracketcontestant.html","","<p>A Bracketcontestant will eventually be a Team. However, before a specific\nTeam is identified as being …\n"],["BracketcontestsController","","BracketcontestsController.html","",""],["BracketcontestsHelper","","BracketcontestsHelper.html","",""],["Bracketgrouping","","Bracketgrouping.html","","<p>This class defines a Bracketgrouping for the purpose of collecting\nBracketcontests. A Bracketgrouping …\n"],["BracketgroupingsController","","BracketgroupingsController.html","","<p>This controller displays the available Bracketgroupings and allows the user\nto select one for updating …\n"],["BracketsHelper","","BracketsHelper.html","",""],["Competition","","Competition.html","","<p>This class contains the essentials for a Competition\n"],["CompetitionsController","","CompetitionsController.html","","<p>A Competition is created from the OrganizationsController.\n"],["CompetitionsHelper","","CompetitionsHelper.html","",""],["Contest","","Contest.html","","<p>This is the base class which contains the single table for all inherited\nContest classes (Regularcontest, …\n"],["Contestant","","Contestant.html","",""],["CustomerEmailer","","CustomerEmailer.html","",""],["DisplayController","","DisplayController.html","",""],["DisplayHelper","","DisplayHelper.html","",""],["EmailAlert","","EmailAlert.html","",""],["GameTime","","GameTime.html","","<p>A GameTime is a time of day in five minute increments. An allowable value\nis “TBD” which means …\n"],["Grouping","","Grouping.html","","<p>This class defines collections of Teams for the purpose of Standings and/or\nPlayoffs, as well as limiting …\n"],["Groupingplace","","Groupingplace.html","",""],["GroupingsController","","GroupingsController.html","",""],["GroupingsHelper","","GroupingsHelper.html","",""],["Manager","","Manager.html","","\n<pre>This class defines a Manager for the purpose of controlling access to</pre>\n<p>the functions for Managing a Competition …\n"],["ManagerSessionsController","","ManagerSessionsController.html","",""],["ManagerSessionsHelper","","ManagerSessionsHelper.html","",""],["ManagersController","","ManagersController.html","","<p>Manager controller classes inherit from this class.\n"],["NestedController","","NestedController.html","","<p>Controllers which operate on resources nested within Competition inherit\nfrom this controller class, …\n"],["Nestedmodel","","Nestedmodel.html","",""],["Object","","Object.html","",""],["Organization","","Organization.html","",""],["OrganizationsController","","OrganizationsController.html","","<p>In the routes file, Organization is a Singular Resource. A Organization\nestablishes a Session via a login …\n"],["OrganizationsHelper","","OrganizationsHelper.html","",""],["Regularcontest","","Regularcontest.html","","<p>Regularcontest is a faily simple class which adds little to the basic\nContest class.\n"],["Regularcontestant","","Regularcontestant.html","",""],["RegularcontestsController","","RegularcontestsController.html","",""],["RegularcontestsHelper","","RegularcontestsHelper.html","",""],["SMSAlert","","SMSAlert.html","",""],["Scorer","","Scorer.html","","\n<pre>This class defines a Scorer for the purpose of controlling access to</pre>\n<p>the functions for Managing a Competition …\n"],["ScorerSessionsController","","ScorerSessionsController.html","",""],["ScorerSessionsHelper","","ScorerSessionsHelper.html","",""],["ScorersController","","ScorersController.html","",""],["ScorersHelper","","ScorersHelper.html","",""],["SupportEmailer","","SupportEmailer.html","",""],["Team","","Team.html","",""],["TeamsController","","TeamsController.html","",""],["TeamsHelper","","TeamsHelper.html","",""],["ValidTime","","ValidTime.html","",""],["ValidTimesController","","ValidTimesController.html","",""],["ValidTimesHelper","","ValidTimesHelper.html","",""],["Validdate","","Validdate.html","",""],["ValiddatesController","","ValiddatesController.html","","<p>The only action this controler performs is to CREATE a ValidDate for a\nCompetition.\n"],["ValiddatesHelper","","ValiddatesHelper.html","",""],["Venue","","Venue.html","",""],["VenuesController","","VenuesController.html","",""],["VenuesHelper","","VenuesHelper.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["<","GameTime","GameTime.html#method-i-3C","(other_gametime)","<p>This is less than other if this index is less than other index.\n"],["<=>","Contest","Contest.html#method-i-3C-3D-3E","(other_contest)",""],["<=>","GameTime","GameTime.html#method-i-3C-3D-3E","(other_gametime)","<p>Compare this index to other index.\n"],["==","GameTime","GameTime.html#method-i-3D-3D","(other_gametime)","<p>Equal if indexes are equal.\n"],[">","GameTime","GameTime.html#method-i-3E","(other_gametime)","<p>This is greater than other if this index is greater than other index.\n"],["Gamedate","Object","Object.html#method-i-Gamedate","(gamedate)",""],["Gametime","Object","Object.html#method-i-Gametime","(gametime)","<p>Conversion functions\n"],["advance_contestants","Bracketcontest","Bracketcontest.html#method-i-advance_contestants","()","<p>Advance teams if this Bracketcontest is referred to by the contestants of a\nsubsequent Bracketcontest …\n"],["alert_request","DisplayController","DisplayController.html#method-i-alert_request","()",""],["all_participant_codes","Bracketgrouping","Bracketgrouping.html#method-i-all_participant_codes","()",""],["all_priors","Bracketcontest","Bracketcontest.html#method-i-all_priors","()","<p>Returns Array of Bracketcontestants which refer to this Bracketcontest.\n"],["all_subgroupings","Grouping","Grouping.html#method-i-all_subgroupings","()","<p>Groupings directly within this Grouping plus Groupings within any\ndescendants of this Grouping.\n"],["all_teams","Grouping","Grouping.html#method-i-all_teams","()","<p>Teams directly within this Grouping plus Teams within any descendants of\nthis Grouping. Ordinarily there …\n"],["alll","Bracketgrouping","Bracketgrouping.html#method-c-alll","()",""],["as_bracketgrouping","Grouping","Grouping.html#method-i-as_bracketgrouping","()",""],["as_competition","Manager","Manager.html#method-i-as_competition","()","<p>Re-cast to inherited class\n"],["as_contestants","Team","Team.html#method-i-as_contestants","()","<p>Return an Array of all Contestants for which this is the Team.\n"],["as_regular_contestants","Team","Team.html#method-i-as_regular_contestants","()","<p>Return an Array of all Regularcontestants for which this is the Team. This\nis useful for the Team&#39;s …\n"],["assign_seeding_and_ccode","Bracketgrouping","Bracketgrouping.html#method-i-assign_seeding_and_ccode","(bc, seed_or_pair)",""],["authenticate","Manager","Manager.html#method-c-authenticate","(mgrid, mgrpw)",""],["authenticate","Scorer","Scorer.html#method-c-authenticate","(scorerid, scorerpw)",""],["authenticate_manager","Competition","Competition.html#method-c-authenticate_manager","(compid, mgrpw)",""],["away_team_and_score","Contest","Contest.html#method-i-away_team_and_score","()",""],["bracketdepth","Bracketcontest","Bracketcontest.html#method-i-bracketdepth","()",""],["bracketdepth","Bracketcontestant","Bracketcontestant.html#method-i-bracketdepth","()",""],["briefname","Bracketcontestant","Bracketcontestant.html#method-i-briefname","()","<p>Provide conditional information.\n"],["cancel","RegularcontestsController","RegularcontestsController.html#method-i-cancel","()","<p>PATCH/PUT /regularcontests/cancel/1 PATCH/PUT\n/regularcontests/cancel/1.json\n"],["change_manager_password","ManagersController","ManagersController.html#method-i-change_manager_password","()","<p>Assign the Manager Password if it passes Validations.\n"],["change_scorer_password","ManagersController","ManagersController.html#method-i-change_scorer_password","()","<p>Assign the Scorer Password if it passes Validations.\n"],["clear_manager_password","Competition","Competition.html#method-i-clear_manager_password","()",""],["clear_manager_password","ManagersController","ManagersController.html#method-i-clear_manager_password","()","<p>Set Manager Password to NIL.\n"],["clear_scorer_password","Competition","Competition.html#method-i-clear_scorer_password","()",""],["clear_scorer_password","ManagersController","ManagersController.html#method-i-clear_scorer_password","()","<p>Set Scorer Password to NIL.\n"],["compare_teams","Competition","Competition.html#method-i-compare_teams","(a, b)","<p>Varies by sport\n"],["complete","BracketgroupingsController","BracketgroupingsController.html#method-i-complete","()","<p>GET /bracketgroupings/1\n"],["complete_create","BracketgroupingsController","BracketgroupingsController.html#method-i-complete_create","()","<p>POST /bracketgroupings/1/complete_create\n"],["complete_delete","BracketgroupingsController","BracketgroupingsController.html#method-i-complete_delete","()","<p>POST /bracketgroupings/1/complete_create\n"],["complete_se_matchups","Bracketgrouping","Bracketgrouping.html#method-i-complete_se_matchups","(numseeds=nil)","<p>Complete SingleElimination Matchups. Number of seeds is number of Teams in\nthis Bracketgrouping\n"],["conpetition_id","Manager","Manager.html#method-i-conpetition_id","()","<p>Is this needed?\n"],["contestant_class","Contest","Contest.html#method-i-contestant_class","()","<p>Attach the letters &#39;ant&#39; to the end of the class name of this\nContest subclass object to determine …\n"],["contestantcode","Bracketcontestant","Bracketcontestant.html#method-i-contestantcode","()","<p>Accessor\n"],["contestantcode=","Bracketcontestant","Bracketcontestant.html#method-i-contestantcode-3D","(ccode)","<p>Accept code and interpret it\n"],["contestantlabel","Bracketcontestant","Bracketcontestant.html#method-i-contestantlabel","()","<p>Human-readable version of coded Contestant.\n"],["contestanttype","Bracketcontestant","Bracketcontestant.html#method-i-contestanttype","()","<p>Override with additional information.\n"],["contests","Team","Team.html#method-i-contests","()","<p>Return an Array of all Contests for which this is one of the Teams.\n"],["contests_by_type","DisplayHelper","DisplayHelper.html#method-i-contests_by_type","(collectn, columnArray, label)",""],["create","BracketcontestsController","BracketcontestsController.html#method-i-create","()","<p>POST /bracketcontests POST /bracketcontests.json\n"],["create","CompetitionsController","CompetitionsController.html#method-i-create","()","<p>POST /competitions POST /competitions.json\n"],["create","GroupingsController","GroupingsController.html#method-i-create","()","<p>POST /groupings\n"],["create","ManagerSessionsController","ManagerSessionsController.html#method-i-create","()",""],["create","OrganizationsController","OrganizationsController.html#method-i-create","()","<p>POST /organizations\n"],["create","RegularcontestsController","RegularcontestsController.html#method-i-create","()","<p>POST /regularcontests POST /regularcontests.json\n"],["create","ScorerSessionsController","ScorerSessionsController.html#method-i-create","()",""],["create","TeamsController","TeamsController.html#method-i-create","()","<p>POST /teams\n"],["create","ValidTimesController","ValidTimesController.html#method-i-create","()","<p>POST /valid_times POST /valid_times.json\n"],["create","ValiddatesController","ValiddatesController.html#method-i-create","()","<p>POST /validdates POST /validdates.json\n"],["create","VenuesController","VenuesController.html#method-i-create","()","<p>POST /venues POST /venues.json\n"],["create_competition","OrganizationsController","OrganizationsController.html#method-i-create_competition","()","<p>POST /organization/create_competition\n"],["create_new_salt","Competition","Competition.html#method-i-create_new_salt","()","<p>Both passwords (manager and scorer) share the same salt. It is only\nassigned if  it is requested and …\n"],["create_root_grouping","Competition","Competition.html#method-i-create_root_grouping","()","<p>Used when creating a new Competition.\n"],["default","ValidTime","ValidTime.html#method-c-default","()","<p>Return a ValidTime object that spans the entire day. This can be used for\nselection lists if no specific …\n"],["destroy","BracketcontestsController","BracketcontestsController.html#method-i-destroy","()",""],["destroy","CompetitionsController","CompetitionsController.html#method-i-destroy","()","<p>DELETE /competitions/1 DELETE /competitions/1.json\n"],["destroy","GroupingsController","GroupingsController.html#method-i-destroy","()","<p>DELETE /groupings/1 DELETE /groupings/1.json\n"],["destroy","RegularcontestsController","RegularcontestsController.html#method-i-destroy","()","<p>DELETE /regularcontests/1 DELETE /regularcontests/1.json\n"],["destroy","TeamsController","TeamsController.html#method-i-destroy","()","<p>DELETE /teams/1\n"],["destroy","ValidTimesController","ValidTimesController.html#method-i-destroy","()","<p>DELETE /valid_times/1 DELETE /valid_times/1.json\n"],["destroy","VenuesController","VenuesController.html#method-i-destroy","()","<p>DELETE /venues/1 DELETE /venues/1.json\n"],["display_date","Contest","Contest.html#method-i-display_date","()","<p>Convenience method. Display “TBD” for nil.\n"],["display_from_time","ValidTime","ValidTime.html#method-i-display_from_time","()","<p>Use GameTime class to format beginning of time range.\n"],["display_link_array","ApplicationController","ApplicationController.html#method-i-display_link_array","()","<p>Link array for the public display portion of this application. The Display\nController should override …\n"],["display_pct","Team","Team.html#method-i-display_pct","()","<p>Display version of Winning Percentage.\n"],["display_time","Contest","Contest.html#method-i-display_time","()","<p>Convenience method. Display “TBD” for nil.\n"],["display_to_time","ValidTime","ValidTime.html#method-i-display_to_time","()","<p>Use GameTime class to format ending of time range.\n"],["draw","Contestant","Contestant.html#method-i-draw","()","<p>Draws (when used) are when the scores are equal.\n"],["draws","Team","Team.html#method-i-draws","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is equal to the opponent&#39;s …\n"],["dump","GameTime","GameTime.html#method-c-dump","(gametime)",""],["dump","RegularcontestsController","RegularcontestsController.html#method-i-dump","()","<p>GET /regularcontests GET /regularcontests.json\n"],["earliest","GameTime","GameTime.html#method-c-earliest","()","<p>Earliest time index\n"],["edit","BracketcontestsController","BracketcontestsController.html#method-i-edit","()","<p>GET /bracketcontests/1/edit\n"],["edit","CompetitionsController","CompetitionsController.html#method-i-edit","()","<p>GET /competitions/1/edit\n"],["edit","GroupingsController","GroupingsController.html#method-i-edit","()","<p>GET /groupings/1/edit\n"],["edit","OrganizationsController","OrganizationsController.html#method-i-edit","()","<p>GET /organization/edit\n"],["edit","RegularcontestsController","RegularcontestsController.html#method-i-edit","()","<p>GET /regularcontests/1/edit\n"],["edit","TeamsController","TeamsController.html#method-i-edit","()","<p>GET /teams/1/edit\n"],["edit","ValidTimesController","ValidTimesController.html#method-i-edit","()","<p>GET /valid_times/1/edit\n"],["edit","VenuesController","VenuesController.html#method-i-edit","()","<p>GET /venues/1/edit\n"],["encrypted_password","Competition","Competition.html#method-c-encrypted_password","(password, salt)",""],["failure_redirect","NestedController","NestedController.html#method-i-failure_redirect","()","<p>This specifies the url to redirect to if a Competition has not been\nspecified, or if an invalid Competition …\n"],["for_pair","Bracketgrouping","Bracketgrouping.html#method-i-for_pair","(bc_array)",""],["fullname","Bracketcontestant","Bracketcontestant.html#method-i-fullname","()","<p>Override with additional information.\n"],["fullname","Competition","Competition.html#method-i-fullname","()","<p>Name, Sport, and Variety of Competition, suitable for a title or heading.\n"],["fullname","Contestant","Contestant.html#method-i-fullname","()",""],["fullname","Grouping","Grouping.html#method-i-fullname","()","<p>Concatenated names from very top down to this Grouping.\n"],["fullnav","OrganizationsController","OrganizationsController.html#method-i-fullnav","()","<p>Use this Link Array when Organization is both Confirmed and Logged In.\n"],["game_number","Bracketgrouping","Bracketgrouping.html#method-i-game_number","()",""],["gametimeindex","GameTime","GameTime.html#method-i-gametimeindex","()","<p>Protected so that it is available for comparison purposes\n"],["goal_diff","Team","Team.html#method-i-goal_diff","()","<p>Goal Differential used in Soccer Results.\n"],["goals_against","Team","Team.html#method-i-goals_against","()","<p>Used for Soccer Results.\n"],["goals_for","Team","Team.html#method-i-goals_for","()","<p>Used for Soccer Results.\n"],["greet","ManagersController","ManagersController.html#method-i-greet","()","<p>Initial page.\n"],["greet","OrganizationsController","OrganizationsController.html#method-i-greet","()","<p>GET /organizations/1 GET /organizations/1.json\n"],["group_results_section_label","DisplayHelper","DisplayHelper.html#method-i-group_results_section_label","(comp, type)",""],["group_schedule_headers","DisplayHelper","DisplayHelper.html#method-i-group_schedule_headers","(comp)",""],["group_schedule_row","DisplayHelper","DisplayHelper.html#method-i-group_schedule_row","(comp, team)",""],["group_schedule_section_label","DisplayHelper","DisplayHelper.html#method-i-group_schedule_section_label","(comp, type)",""],["group_section_label","DisplayHelper","DisplayHelper.html#method-i-group_section_label","(comp, type, label)",""],["grouping","DisplayController","DisplayController.html#method-i-grouping","()",""],["grouping_name","ValidTime","ValidTime.html#method-i-grouping_name","()","<p>Convenience method with default if nil.\n"],["has_prior?","Bracketcontest","Bracketcontest.html#method-i-has_prior-3F","()",""],["has_score?","Contest","Contest.html#method-i-has_score-3F","()","<p>True if either Team has a score.\n"],["has_subgroupings?","Grouping","Grouping.html#method-i-has_subgroupings-3F","()","<p>Return true iff there exists at least one Grouping that identifies this as\nits Parent.\n"],["has_teams?","Grouping","Grouping.html#method-i-has_teams-3F","()","<p>Return true iff there exists at least one Team that identifies this as its\nGrouping.\n"],["hierarchy","Grouping","Grouping.html#method-i-hierarchy","()","<p>(Recursive) Return an Array with this Grouping appended to the end of the\nArray returned by sending this …\n"],["home_team_and_score","Contest","Contest.html#method-i-home_team_and_score","()",""],["index","BracketgroupingsController","BracketgroupingsController.html#method-i-index","()","<p>GET /bracketgroupings\n"],["index","CompetitionsController","CompetitionsController.html#method-i-index","()","<p>GET /competitions GET /competitions.json\n"],["index","DisplayController","DisplayController.html#method-i-index","()",""],["index","GroupingsController","GroupingsController.html#method-i-index","()","<p>GET /groupings GET /groupings.json\n"],["index","RegularcontestsController","RegularcontestsController.html#method-i-index","()","<p>GET /regularcontests GET /regularcontests.json\n"],["index","ScorersController","ScorersController.html#method-i-index","()","<p>Create two lists of Contests, one of Contests with scores and one of\nContests without scores.\n"],["index","TeamsController","TeamsController.html#method-i-index","()","<p>Only show Teams for this Grouping GET /grouping/1/teams\n"],["index","ValidTimesController","ValidTimesController.html#method-i-index","()","<p>GET /valid_times GET /valid_times.json\n"],["index","VenuesController","VenuesController.html#method-i-index","()","<p>GET /venues GET /venues.json\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["inspect","Bcadvancement","Bcadvancement.html#method-i-inspect","()",""],["inspect","Groupingplace","Groupingplace.html#method-i-inspect","()",""],["instructions","ApplicationHelper","ApplicationHelper.html#method-i-instructions","()",""],["label","Bcadvancement","Bcadvancement.html#method-i-label","()",""],["label","Groupingplace","Groupingplace.html#method-i-label","()",""],["latest","GameTime","GameTime.html#method-c-latest","()","<p>Latest time index\n"],["load","GameTime","GameTime.html#method-c-load","(raw)",""],["logout","ManagerSessionsController","ManagerSessionsController.html#method-i-logout","()",""],["logout","ScorerSessionsController","ScorerSessionsController.html#method-i-logout","()",""],["loser_code","Bracketcontest","Bracketcontest.html#method-i-loser_code","()","<p>return the contestantcode for the Loser of this Bracketcontest\n"],["losing_team_and_score","Contest","Contest.html#method-i-losing_team_and_score","()",""],["loss","Contestant","Contestant.html#method-i-loss","()","<p>But a Loss is a whole other thing…\n"],["losses","Team","Team.html#method-i-losses","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is less than the opponent&#39;s …\n"],["manager_id","Manager","Manager.html#method-i-manager_id","()","<p>Is this needed?\n"],["manager_link_array","ApplicationController","ApplicationController.html#method-i-manager_link_array","()","<p>Link array for Managers, who have access to everything related to the\napplication for a Competition. …\n"],["manager_password","Competition","Competition.html#method-i-manager_password","()","<p>manager_password is included on the HTML form and is sent with the HTTP\nrequest but hashed_manager_password …\n"],["manager_password=","Competition","Competition.html#method-i-manager_password-3D","(pwd)",""],["navPanel","ApplicationHelper","ApplicationHelper.html#method-i-navPanel","()","<p>Start the process to produce a (nested) Unordered List of Links for\nNavigation.\n"],["nav_Panel","ApplicationHelper","ApplicationHelper.html#method-i-nav_Panel","(nav_level, link_array )","<p>Produce an Unordered List of Links for Navigation. This may be called\nrecursively.\n\n<pre>* ul_opts = HTML options ...</pre>\n"],["nav_link_array","ApplicationController","ApplicationController.html#method-i-nav_link_array","()","<p>Default link array. Should be overridden by controllers for this\napplication.\n"],["nav_link_array","DisplayController","DisplayController.html#method-i-nav_link_array","()","<p>Array of Grouping links can have nested Arrays of Grouping links, but it\nall starts at the top. No navigation …\n"],["nav_link_array","ManagerSessionsController","ManagerSessionsController.html#method-i-nav_link_array","()","<p>Link Array.\n"],["nav_link_array","ManagersController","ManagersController.html#method-i-nav_link_array","()","<p>Only display navigation links if we are working within a Competition. If we\nare still selecting the  …\n"],["nav_link_array","OrganizationsController","OrganizationsController.html#method-i-nav_link_array","()","<p>Link Array.\n"],["nav_link_array","ScorersController","ScorersController.html#method-i-nav_link_array","()",""],["nav_link_array","WelcomeController","WelcomeController.html#method-i-nav_link_array","()",""],["nav_link_hash","BracketcontestsController","BracketcontestsController.html#method-i-nav_link_hash","()",""],["nav_link_to_grouping","DisplayController","DisplayController.html#method-i-nav_link_to_grouping","(grp)","<p>(Recursive) The navigation link to this grouping is followed by an Array of\nnavigation links to each …\n"],["navitem","ApplicationController","ApplicationController.html#method-i-navitem","(href, text, options={})",""],["needs_no_authentication","Manager","Manager.html#method-c-needs_no_authentication","(mgrid)",""],["needs_no_authentication","Scorer","Scorer.html#method-c-needs_no_authentication","(scorerid)",""],["needs_score?","Contest","Contest.html#method-i-needs_score-3F","()","<p>True if neither Team has a score.\n"],["nested_groupings","GroupingsHelper","GroupingsHelper.html#method-i-nested_groupings","(grp_level, grouping)","<p>Produce an Unordered List of Links for Navigation. This may be called\nrecursively.\n\n<pre>* ul_opts = HTML options ...</pre>\n"],["new","BracketcontestsController","BracketcontestsController.html#method-i-new","()","<p>GET /bracketcontests/new\n"],["new","CompetitionsController","CompetitionsController.html#method-i-new","()","<p>GET /competitions/new\n"],["new","Contest","Contest.html#method-c-new","(attributes = nil, options = {})","<p>Each Contest (and all subclasses) must have two Contestants. We initialize\neach Contest with two shell …\n"],["new","GameTime","GameTime.html#method-c-new","(whatever)","<p>Store an index value of zero unless we can make sense of whatever string\npassed in.\n"],["new","GroupingsController","GroupingsController.html#method-i-new","()","<p>GET /groupings/new\n"],["new","ManagerSessionsController","ManagerSessionsController.html#method-i-new","()","<p>new action requests prompt page for password. Manager ID must have been\nsupplied. If no password is required …\n"],["new","OrganizationsController","OrganizationsController.html#method-i-new","()","<p>GET /organizations/new\n"],["new","RegularcontestsController","RegularcontestsController.html#method-i-new","()","<p>GET /regularcontests/new\n"],["new","ScorerSessionsController","ScorerSessionsController.html#method-i-new","()",""],["new","TeamsController","TeamsController.html#method-i-new","()","<p>GET /grouping/1/teams/new\n"],["new","ValidTimesController","ValidTimesController.html#method-i-new","()","<p>GET /valid_times/new\n"],["new","VenuesController","VenuesController.html#method-i-new","()","<p>GET /venues/new\n"],["new_competition","OrganizationsController","OrganizationsController.html#method-i-new_competition","()","<p>GET /organization/new_competition\n"],["opponent","Contestant","Contestant.html#method-i-opponent","()","<p>Returns instance of a descendant of Contestant class that is the other\ncontestant in the Contest with …\n"],["passwords","ManagersController","ManagersController.html#method-i-passwords","()","<p>Display page where Manager can set or clear either the Manager Password or\nthe Scorer Password.\n"],["pct","Team","Team.html#method-i-pct","()","<p>Winning Percentage, expressed as a decimal.\n"],["playoffbracketlabels","Competition","Competition.html#method-c-playoffbracketlabels","()",""],["points","Team","Team.html#method-i-points","()","<p>Used for soccer results.\n"],["poolgroupseasonlabels","Competition","Competition.html#method-c-poolgroupseasonlabels","()",""],["priorcontest","Bracketcontestant","Bracketcontestant.html#method-i-priorcontest","()","<p>Prior Bracketcontest referred to by this Contestant. This acts as a\n“through” association shortcut, …\n"],["rant","SupportEmailer","SupportEmailer.html#method-i-rant","(paramhash)","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">en</span>.<span class=\"ruby-identifier\">support_emailer</span>.<span class=\"ruby-identifier\">rant</span>.<span class=\"ruby-identifier\">subject</span>\n</pre>\n"],["record_result","Bracketcontest","Bracketcontest.html#method-i-record_result","(homescore, awayscore, status=\"COMPLETED\")","<p>Assign score to each Bracketcontestant and status to entire Bracketcontest.\nSave all three records in …\n"],["record_result","Contest","Contest.html#method-i-record_result","(homescore, awayscore, status=\"COMPLETED\")","<p>Assign score to each Contestant and status to entire Contest. Save all\nthree records in a single transaction. …\n"],["report","ScorersController","ScorersController.html#method-i-report","()","<p>PATCH for reporting a score or correcting a score. Note that we can report\nthe score of any type of  …\n"],["result_headings","Competition","Competition.html#method-i-result_headings","()","<p>Display table headings for Standings for a Grouping or for a Team&#39;s\nrecord.\n"],["result_row","Competition","Competition.html#method-i-result_row","()","<p>Varies by sport\n"],["roundrobin","RegularcontestsController","RegularcontestsController.html#method-i-roundrobin","()","<p>POST/regularcontests/roundrobin POST /regularcontests/roundrobin.json\n"],["rrobin","RegularcontestsController","RegularcontestsController.html#method-i-rrobin","()","<p>GET/regularcontests/rrobin GET /regularcontests/rrobin.json\n"],["save","Bracketcontestant","Bracketcontestant.html#method-i-save","(*)","<p>Override with automatic save of bcspec, if it exists.\n"],["save","Competition","Competition.html#method-i-save","()","<p>Override by adding creation of a root Grouping if this save is a creation\nsave ass opposed to an update …\n"],["save","Contest","Contest.html#method-i-save","(*)",""],["save!","Bracketcontestant","Bracketcontestant.html#method-i-save-21","(*)","<p>Override with automatic save of bcspec, if it exists.\n"],["save!","Contest","Contest.html#method-i-save-21","(*)",""],["scorer_id","Scorer","Scorer.html#method-i-scorer_id","()",""],["scorer_link_array","ApplicationController","ApplicationController.html#method-i-scorer_link_array","()","<p>Link array for scorers, who can also open up the public display portion of\nthis application in a separate …\n"],["scorer_password","Competition","Competition.html#method-i-scorer_password","()","<p>scorer_password is included on the HTML form and is sent with the HTTP\nrequest but hashed_scorer_password …\n"],["scorer_password=","Competition","Competition.html#method-i-scorer_password-3D","(pwd)",""],["scores_by_type","DisplayHelper","DisplayHelper.html#method-i-scores_by_type","(collectn, columnArray)",""],["se_matchups","Bracketgrouping","Bracketgrouping.html#method-i-se_matchups","(numseeds)","<p>SingleElimination Matchups. Takes the number of seeds (i.e. Teams)\n"],["select_from_objects","ApplicationHelper","ApplicationHelper.html#method-i-select_from_objects","(objectList, chosen=nil)","<p>Accepts a list of objects.  Each object in the list must respond to both\n#name and #id.  From this list …\n"],["select_options","ValidTime","ValidTime.html#method-i-select_options","()","<p>Returns an array of HTML Select Element Options\n"],["send_us_a_message","WelcomeController","WelcomeController.html#method-i-send_us_a_message","()",""],["set_alert","DisplayController","DisplayController.html#method-i-set_alert","()",""],["set_bracketgrouping","BracketcontestsController","BracketcontestsController.html#method-i-set_bracketgrouping","()",""],["set_competition","NestedController","NestedController.html#method-i-set_competition","(competition_id)","<p>If a Competition has been specified, then set the scope for all nested\nresources to that Competition …\n"],["show","BracketcontestsController","BracketcontestsController.html#method-i-show","()","<p>GET /bracketcontests/1 GET /bracketcontests/1.json\n"],["show","BracketgroupingsController","BracketgroupingsController.html#method-i-show","()","<p>GET /bracketgroupings/1\n"],["show","CompetitionsController","CompetitionsController.html#method-i-show","()","<p>GET /competitions/1 GET /competitions/1.json\n"],["show","GroupingsController","GroupingsController.html#method-i-show","()","<p>GET /groupings/1 GET /groupings/1.json\n"],["show","TeamsController","TeamsController.html#method-i-show","()","<p>GET /teams/1\n"],["show","ValidTimesController","ValidTimesController.html#method-i-show","()","<p>GET /valid_times/1 GET /valid_times/1.json\n"],["show","VenuesController","VenuesController.html#method-i-show","()","<p>GET /venues/1 GET /venues/1.json\n"],["standings_headers","DisplayHelper","DisplayHelper.html#method-i-standings_headers","(comp)",""],["standings_row","DisplayHelper","DisplayHelper.html#method-i-standings_row","(comp, team)",""],["statuses","Contest","Contest.html#method-c-statuses","()","<p>Create a collection of contest statuses. This will be used to display\nselection choices and for validation. …\n"],["subgroupings","Grouping","Grouping.html#method-i-subgroupings","()","<p>Return the Collection of Groupings that identify this as their Parent.\n"],["tbd?","GameTime","GameTime.html#method-i-tbd-3F","()","<p>TBD means ToBeDetermined which we want to sort before any definite time.\n"],["team","DisplayController","DisplayController.html#method-i-team","()",""],["team_link_for","DisplayHelper","DisplayHelper.html#method-i-team_link_for","(team)",""],["teamname","Contestant","Contestant.html#method-i-teamname","()",""],["times","GameTime","GameTime.html#method-c-times","()","<p>Create a collection of times throughout the day in five minute increments.\nThis will be used to display …\n"],["to_s","GameTime","GameTime.html#method-i-to_s","()","<p>Display “TBD” for unspecified or invalid time.  Display “hh:mm AM/PM” for\nvalid times. …\n"],["top_grouping","Competition","Competition.html#method-i-top_grouping","()","<p>This Competition&#39;s Grouping which has no parent.\n"],["unique_contests","Grouping","Grouping.html#method-i-unique_contests","()","<p>Return an Array of all Contests for which any Team in this Grouping is the\nTeam.\n"],["update","BracketcontestsController","BracketcontestsController.html#method-i-update","()","<p>PATCH/PUT /bracketcontests/1 PATCH/PUT /bracketcontests/1.json\n"],["update","CompetitionsController","CompetitionsController.html#method-i-update","()","<p>PATCH/PUT /competitions/1 PATCH/PUT /competitions/1.json\n"],["update","GroupingsController","GroupingsController.html#method-i-update","()","<p>PATCH/PUT /groupings/1 PATCH/PUT /groupings/1.json\n"],["update","OrganizationsController","OrganizationsController.html#method-i-update","()","<p>PATCH/PUT /organizations/1\n"],["update","RegularcontestsController","RegularcontestsController.html#method-i-update","()","<p>PATCH/PUT /regularcontests/1 PATCH/PUT /regularcontests/1.json\n"],["update","TeamsController","TeamsController.html#method-i-update","()","<p>PATCH/PUT /teams/1\n"],["update","ValidTimesController","ValidTimesController.html#method-i-update","()","<p>PATCH/PUT /valid_times/1 PATCH/PUT /valid_times/1.json\n"],["update","VenuesController","VenuesController.html#method-i-update","()","<p>PATCH/PUT /venues/1 PATCH/PUT /venues/1.json\n"],["valid_times_as_select_options","Competition","Competition.html#method-i-valid_times_as_select_options","()","<p>If this Competition does not have its own list of Valid Time Ranges, then\nuse the default.\n"],["valid_times_sorted","Competition","Competition.html#method-i-valid_times_sorted","()","<p>Make sure our list makes sense to users.\n"],["venue_name","Contest","Contest.html#method-i-venue_name","()","<p>Convenience method. Display “TBD” for nil.\n"],["venue_name","ValidTime","ValidTime.html#method-i-venue_name","()","<p>Convenience method with default if nil.\n"],["welcome","CustomerEmailer","CustomerEmailer.html#method-i-welcome","(customer)","<p>Subject can be set in your I18n file at config/locales/en.yml with the\nfollowing lookup:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">en</span>.<span class=\"ruby-identifier\">customer_emailer</span>.<span class=\"ruby-identifier\">welcome</span>.<span class=\"ruby-identifier\">subject</span>\n</pre>\n"],["win","Contestant","Contestant.html#method-i-win","()","<p>A Win is a Win…\n"],["winner_code","Bracketcontest","Bracketcontest.html#method-i-winner_code","()","<p>return the contestantcode for the Winner of this Bracketcontest\n"],["winning_team_and_score","Contest","Contest.html#method-i-winning_team_and_score","()",""],["wins","Team","Team.html#method-i-wins","()","<p>Return count of all Regularcontestants for which this is the Team and this\nscore is more than the opponent&#39;s …\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["bracketcontests.js","","app/assets/javascripts/bracketcontests_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["bracketcontests.js.coffee","","app/assets/javascripts/bracketcontests_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["competitions.js.coffee","","app/assets/javascripts/competitions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["customer_sessions.js.coffee","","app/assets/javascripts/customer_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["customers.js.coffee","","app/assets/javascripts/customers_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["display.js.coffee","","app/assets/javascripts/display_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["groupings.js.coffee","","app/assets/javascripts/groupings_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["manager_sessions.js.coffee","","app/assets/javascripts/manager_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["regularcontests.js.coffee","","app/assets/javascripts/regularcontests_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["result_sessions.js.coffee","","app/assets/javascripts/result_sessions_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["results.js","","app/assets/javascripts/results_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["results.js.coffee","","app/assets/javascripts/results_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["teams.js.coffee","","app/assets/javascripts/teams_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["valid_times.js","","app/assets/javascripts/valid_times_js.html","","<p>// Place all the behaviors and hooks related to the matching controller\nhere. // All this logic will …\n"],["valid_times.js.coffee","","app/assets/javascripts/valid_times_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["validdates.js.coffee","","app/assets/javascripts/validdates_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["venues.js.coffee","","app/assets/javascripts/venues_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["welcome.js.coffee","","app/assets/javascripts/welcome_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.css","","app/assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["bracketcontests.css.scss","","app/assets/stylesheets/bracketcontests_css_scss.html","","<p>// Place all the styles related to the bracketcontests controller here. //\nThey will automatically be …\n"],["common.css","","app/assets/stylesheets/common_css.html","","\n<pre>       Global styling   \n\n  html, body {height: 100%;\n              padding: 0;\n              margin: ...</pre>\n"],["competitions.css.scss","","app/assets/stylesheets/competitions_css_scss.html","","<p>// Place all the styles related to the competitions controller here. //\nThey will automatically be included …\n"],["display.css.scss","","app/assets/stylesheets/display_css_scss.html","","<p>// Place all the styles related to the display controller here. // They\nwill automatically be included …\n"],["groupings.css.scss","","app/assets/stylesheets/groupings_css_scss.html","","<p>// Place all the styles related to the groupings controller here. // They\nwill automatically be included …\n"],["manager_sessions.css.scss","","app/assets/stylesheets/manager_sessions_css_scss.html","","<p>// Place all the styles related to the manager_sessions controller here. //\nThey will automatically be …\n"],["organizations.css.scss","","app/assets/stylesheets/organizations_css_scss.html","","<p>// Place all the styles related to the organizations controller here. //\nThey will automatically be included …\n"],["regularcontests.css.scss","","app/assets/stylesheets/regularcontests_css_scss.html","","<p>// Place all the styles related to the regularcontests controller here. //\nThey will automatically be …\n"],["scaffolds.css.scss","","app/assets/stylesheets/scaffolds_css_scss.html","","\n<pre>Disabled default by renaming &quot;body&quot; to &quot;bbody&quot;</pre>\n<p>bbody {\n\n<pre>background-color: #fff;\ncolor: #333;\nfont-family: ...</pre>\n"],["scorer_sessions.css.scss","","app/assets/stylesheets/scorer_sessions_css_scss.html","","<p>// Place all the styles related to the result_sessions controller here. //\nThey will automatically be …\n"],["scorers.css.scss","","app/assets/stylesheets/scorers_css_scss.html","","<p>// Place all the styles related to the results controller here. // They\nwill automatically be included …\n"],["teams.css.scss","","app/assets/stylesheets/teams_css_scss.html","","<p>// Place all the styles related to the teams controller here. // They will\nautomatically be included …\n"],["valid_times.css.scss","","app/assets/stylesheets/valid_times_css_scss.html","","<p>// Place all the styles related to the ValidTimes controller here. // They\nwill automatically be included …\n"],["validdates.css.scss","","app/assets/stylesheets/validdates_css_scss.html","","<p>// Place all the styles related to the validdates controller here. // They\nwill automatically be included …\n"],["venues.css.scss","","app/assets/stylesheets/venues_css_scss.html","","<p>// Place all the styles related to the venues controller here. // They will\nautomatically be included …\n"],["welcome.css.scss","","app/assets/stylesheets/welcome_css_scss.html","","<p>// Place all the styles related to the welcome controller here. // They\nwill automatically be included …\n"],["index.json.jbuilder","","app/views/bracketgroupings/index_json_jbuilder.html","","<p>json.array!(@brackets) do |bracket|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">extract!</span> <span class=\"ruby-identifier\">bracket</span>, :<span class=\"ruby-identifier\">id</span>\n<span class=\"ruby-identifier\">json</span>.<span class=\"ruby-identifier\">url</span> <span class=\"ruby-identifier\">bracket_url</span>(<span class=\"ruby-identifier\">bracket</span>, <span class=\"ruby-identifier\">format</span><span class=\"ruby-operator\">:</span> :<span class=\"ruby-identifier\">json</span>)\n</pre>\n"],["show.json.jbuilder","","app/views/bracketgroupings/show_json_jbuilder.html","","<p>json.extract! @bracket, :id, :created_at, :updated_at\n"],["index.json.jbuilder","","app/views/competitions/index_json_jbuilder.html","","<p>json.array!(@competitions) do |competition|\n\n<pre>json.extract! competition, :id, :name, :sport, :variety, :poolgroupseason, ...</pre>\n"],["show.json.jbuilder","","app/views/competitions/show_json_jbuilder.html","","<p>json.extract! @competition, :id, :name, :sport, :variety, :poolgroupseason,\n:poolgroupseasonlabel, :playoffbracket, …\n"],["ydivvy.html","","app/views/display/ydivvy_html.html","","<p>&lt;html&gt;\n\n<pre>&lt;head&gt;\n &lt;style&gt;\n  div.bc { display: table-cell;\n               background-color: yellow;} ...</pre>\n"],["zdivvy.html","","app/views/display/zdivvy_html.html","","<p>&lt;html&gt;\n\n<pre>&lt;head&gt;\n &lt;style&gt;\n  div.bc { display: table-cell;\n               text-align: right;}\n\n  div.bcThird ...</pre>\n"],["index.json.jbuilder","","app/views/groupings/index_json_jbuilder.html","","<p>json.array!(@groupings) do |grouping|\n\n<pre>json.extract! grouping, :id, :competition_id, :name, :parent_id ...</pre>\n"],["show.json.jbuilder","","app/views/groupings/show_json_jbuilder.html","","<p>json.extract! @grouping, :id, :competition_id, :name, :parent_id,\n:created_at, :updated_at\n"],["application.html.erb.bak","","app/views/layouts/application_html_erb_bak.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;Scoreboard - &lt;%= controller.class.to_s.rpartition(&#39;C&#39;)[0] ...</pre>\n"],["index.json.jbuilder","","app/views/organizations/index_json_jbuilder.html","","<p>json.array!(@organizations) do |organization|\n\n<pre>json.extract! organization, :id\njson.url organization_url(organization, ...</pre>\n"],["show.json.jbuilder","","app/views/organizations/show_json_jbuilder.html","","<p>json.extract! @organization, :id\n"],["index.json.jbuilder","","app/views/regularcontests/index_json_jbuilder.html","","<p>json.array!(@regularcontests) do |regularcontest|\n\n<pre>json.extract! regularcontest, :id\njson.url regularcontest_url(regularcontest, ...</pre>\n"],["index.json.jbuilder","","app/views/teams/index_json_jbuilder.html","","<p>json.array!(@teams) do |team|\n\n<pre>json.extract! team, :id, :competition_id, :name, :grouping_id\njson.url team_url(team, ...</pre>\n"],["show.json.jbuilder","","app/views/teams/show_json_jbuilder.html","","<p>json.extract! @team, :id, :competition_id, :name, :grouping_id,\n:created_at, :updated_at\n"],["index.json.jbuilder","","app/views/valid_times/index_json_jbuilder.html","","<p>json.array!(@valid_times) do |valid_time|\n\n<pre>json.extract! valid_time, :id, :competition_id, :grouping_id, ...</pre>\n"],["show.json.jbuilder","","app/views/valid_times/show_json_jbuilder.html","","<p>json.extract! @valid_time, :id, :competition_id, :grouping_id, :venue_id,\n:from_time, :to_time, :created_at, …\n"],["index.json.jbuilder","","app/views/validdates/index_json_jbuilder.html","","<p>json.array!(@validdates) do |validdate|\n\n<pre>json.extract! validdate, :id, :gamedate, :competition_id\njson.url ...</pre>\n"],["show.json.jbuilder","","app/views/validdates/show_json_jbuilder.html","","<p>json.extract! @validdate, :id, :gamedate, :competition_id, :created_at,\n:updated_at\n"],["index.json.jbuilder","","app/views/venues/index_json_jbuilder.html","","<p>json.array!(@venues) do |venue|\n\n<pre>json.extract! venue, :id, :name, :competition_id\njson.url venue_url(venue, ...</pre>\n"],["show.json.jbuilder","","app/views/venues/show_json_jbuilder.html","","<p>json.extract! @venue, :id, :name, :competition_id, :created_at, :updated_at\n"],["robots","","app/views/welcome/robots_txt.html","","<p>User-agent: * Disallow: /admin/ Disallow: /classes/ Disallow:\n/organization/ Disallow: /images/ Disallow: …\n"]]}}